<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Output' inline='true' name='federated.1xqnoq81t50pth150v2m1154huxy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Output' name='textscan.0jbp8th1dxxwgw14w4l0x1qplae7'>
            <connection class='textscan' directory='C:/Users/anich/OneDrive/Documents/My Tableau Prep Repository/Datasources' filename='Output.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0jbp8th1dxxwgw14w4l0x1qplae7' name='Output.csv' table='[Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Postcode District' ordinal='0' />
            <column datatype='integer' name='Q3' ordinal='1' />
            <column datatype='integer' name='Est &lt; Eu4' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0jbp8th1dxxwgw14w4l0x1qplae7' name='Output.csv' table='[Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Postcode District' ordinal='0' />
            <column datatype='integer' name='Q3' ordinal='1' />
            <column datatype='integer' name='Est &lt; Eu4' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postcode District</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Postcode District]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Postcode District</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_23844259662A475F8244B14A9CFF89E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Q3]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Q3</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_23844259662A475F8244B14A9CFF89E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Est &lt; Eu4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Est &lt; Eu4]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Est &lt; Eu4</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_23844259662A475F8244B14A9CFF89E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number of Non- Compliant Cars' datatype='integer' name='[Est &lt; Eu4]' role='measure' type='quantitative' />
      <column caption='CAZ' datatype='string' name='[Postcode District (group)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Postcode District]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;BS1&quot;'>
            <value>&quot;BS1&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Postcode District]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <semantic-values semantic-role='[ZipCode].[Name]'>
          <semantic-value key='&quot;BS12&quot;' value='&quot;BS34&quot;' />
        </semantic-values>
      </column>
      <column caption='Total Cars' datatype='integer' name='[Q3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Output.csv' datatype='table' name='[__tableau_internal_object_id__].[Output.csv_23844259662A475F8244B14A9CFF89E8]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Postcode District (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BS1&quot;</bucket>
            </map>
            <map to='#aaffff'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
        <semantic-value key='[ZipCode].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Output.csv' id='Output.csv_23844259662A475F8244B14A9CFF89E8'>
            <properties context=''>
              <relation connection='textscan.0jbp8th1dxxwgw14w4l0x1qplae7' name='Output.csv' table='[Output#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Postcode District' ordinal='0' />
                  <column datatype='integer' name='Q3' ordinal='1' />
                  <column datatype='integer' name='Est &lt; Eu4' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='CAZ'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.1xqnoq81t50pth150v2m1154huxy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xqnoq81t50pth150v2m1154huxy'>
            <column caption='CAZ' datatype='string' name='[Postcode District (group)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Postcode District]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;BS1&quot;'>
                  <value>&quot;BS1&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Postcode District]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
              <semantic-values semantic-role='[ZipCode].[Name]'>
                <semantic-value key='&quot;BS12&quot;' value='&quot;BS34&quot;' />
              </semantic-values>
            </column>
            <column caption='Total Cars' datatype='integer' name='[Q3]' role='measure' type='quantitative' />
            <column-instance column='[Postcode District]' derivation='None' name='[none:Postcode District:nk]' pivot='key' type='nominal' />
            <column-instance column='[Q3]' derivation='Sum' name='[sum:Q3:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xqnoq81t50pth150v2m1154huxy].[Longitude (generated)]' field-type='quantitative' max='-263499.65127822163' min='-314691.8394150383' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xqnoq81t50pth150v2m1154huxy].[Latitude (generated)]' field-type='quantitative' max='6718656.8071986865' min='6688714.9926147414' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1xqnoq81t50pth150v2m1154huxy].[Postcode District (group)]' />
              <text column='[federated.1xqnoq81t50pth150v2m1154huxy].[none:Postcode District:nk]' />
              <lod column='[federated.1xqnoq81t50pth150v2m1154huxy].[sum:Q3:qk]' />
              <geometry column='[federated.1xqnoq81t50pth150v2m1154huxy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xqnoq81t50pth150v2m1154huxy].[Latitude (generated)]</rows>
        <cols>[federated.1xqnoq81t50pth150v2m1154huxy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D54DB921-FD88-4097-8592-34F3BF445AAE}' />
    </worksheet>
    <worksheet name='Total Cars vs Non-Complaint Cars'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cars vs Non-Complaint Cars</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.1xqnoq81t50pth150v2m1154huxy' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqnoq81t50pth150v2m1154huxy'>
            <column caption='Number of Non- Compliant Cars' datatype='integer' name='[Est &lt; Eu4]' role='measure' type='quantitative' />
            <column datatype='string' name='[Postcode District]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
              <semantic-values semantic-role='[ZipCode].[Name]'>
                <semantic-value key='&quot;BS12&quot;' value='&quot;BS34&quot;' />
              </semantic-values>
            </column>
            <column caption='Total Cars' datatype='integer' name='[Q3]' role='measure' type='quantitative' />
            <column-instance column='[Postcode District]' derivation='None' name='[none:Postcode District:nk]' pivot='key' type='nominal' />
            <column-instance column='[Est &lt; Eu4]' derivation='Sum' name='[sum:Est &lt; Eu4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Q3]' derivation='Sum' name='[sum:Q3:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xqnoq81t50pth150v2m1154huxy].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xqnoq81t50pth150v2m1154huxy].[sum:Est &lt; Eu4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xqnoq81t50pth150v2m1154huxy].[sum:Q3:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xqnoq81t50pth150v2m1154huxy].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xqnoq81t50pth150v2m1154huxy].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xqnoq81t50pth150v2m1154huxy].[Multiple Values]</rows>
        <cols>([federated.1xqnoq81t50pth150v2m1154huxy].[none:Postcode District:nk] / [federated.1xqnoq81t50pth150v2m1154huxy].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{A4AB5381-E7B6-4559-8244-5DAB9E73735B}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='CAZ'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xqnoq81t50pth150v2m1154huxy].[Postcode District (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqnoq81t50pth150v2m1154huxy].[Postcode District (group)]</field>
            <field>[federated.1xqnoq81t50pth150v2m1154huxy].[none:Postcode District:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC93F6C7-7EFD-46A5-8987-8ABE113B9A5A}' />
    </window>
    <window class='worksheet' maximized='true' name='Total Cars vs Non-Complaint Cars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xqnoq81t50pth150v2m1154huxy].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xqnoq81t50pth150v2m1154huxy].[:Measure Names]</field>
            <field>[federated.1xqnoq81t50pth150v2m1154huxy].[none:Postcode District:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F158CB52-C844-4DB6-9920-7439C5C9C75E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CAZ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9SXMkSZYm9qktvsLh2NdARACBQKwZmVldOVU95LS09ExzuBxbhAeSIvwv
      PPE38AdQeKDw0Jeeafb0Ur1UV1dlZeyBLRDY3QF3+L7bojyYqUHdXG1zd0REU/CleCLc3ExV
      zey9p2/Tp6Rer1NVVXGLfz0wTRP/cHqK5MoKQEjk6+X9fawvLDjfJUkCIQSUUlBKAcD56wXi
      6jfofL9r+eOSJAVeTymFaZqev5uUQpFlz354KKqqIh6PB554i68He4eH6CwtQY/FQr1kBkop
      qGki3e0KryOEOMf9CEyEKOMA4EnolFKHIb1+Z+d4QfG5fmAcoc66xVcD0zTxqdGAkkgMd71h
      gBd3PNF/DrCZIubDvKZpDswoTOoHMaYf8wjPD33mLb44KKUoFIs4LJVAKR2KcPVOB0luxufV
      Hvbdj8iYmhKV0ACLsA1qQo3FkEqlfKU4zwRsTH5qFhtX5Jko0tm3+KIwTROvLi+x/LOfobi7
      G0nvZuhVq8hMTAh/czNDEKLOHoxIdU1Do9GAYRi+55umCcMwbowhgVsG+FeF03wezcVFKPE4
      JldWUDo4iHQ9IQRqOo3tqyuc5PPo9XrO8bBwS2PGBGHakCQJimQZp7quRxq7G6MSPgAYpgnS
      6XTorRH89cM0TfzFhw+QtracF94oFEANA5mlpVBt8NK912yim88j3WxijhCsLCwgFtEbKCJ8
      NouIVLSwjMIzlxuGYUBRlFDeIoZ6vQ4AyGQyfcdNSm8Z4F8DKKXY+fQJu7OziKXTfb+VPn1C
      IptFambG93o/GL0eWufnSNbryGoa7i0tIRHCyPZiAMM2VmVOOkchfp6BeEI3KcVv83lIlOJn
      S0ueDOtmvtcHB2gpCn6xtjYwhlsV6F8Ber0e3rfbUFOpgd9m1tfRurqC1m4Lrw2j08uxGDL3
      70P55hs0v/8ev9Z1vNnfH3q8hACKLEOW5UhqCk/8BjWhGXqf/v8ml4P06BHI06f451IJlVrN
      uT+TmjBMA5RSaIYOwzScNiuxGLR793B6eTnQ5y0DfOWglOLtwQFi6+vOdzdmNzdx9fEjDE0b
      qS9CCIgkIQZg886doduQJTmSigL0E7/JfP3kOkC3l8+js7EByQ5wxTc38YoQnBYuLYkPAkIk
      jiGsNirVKvSZGcQzGRwA0FzP6JYBvnJ0Oh18kiTI3HTvZgJCCBYeP0Zxbw/UlphRPToMvXod
      9zsdpJLJ0QYeAX0RaFjSHAAke9bIl0q4XFqCwo2JEILE6ioOZ+fw4ezUZhgCCuowjWGaOC5d
      IW1HvWPr69jJ5/v6vmWArxw/HRwgZUt/P0iKgul791D0UF2CvDWEEJiGgdThIda4NImoiMp0
      vFfJMC2XJz/WWr2Og1QKienpwTEDiE9Po7zxAD+dnsIwjD4DmoKioqgg9mwkKwqKMzOo1mpO
      G7cM8BWjUqshl04LvSkiyLEYTF2PnMfDvmt7e3hme5TCGK2iABUfsfUaByN2Tdeh6Rp004Bu
      GqCARdX2Od1uF291HYmVFd9xKPE49KdP8euLC7TaHed4tVqFOTfXd25qaQnvKhXn+y0DfKUw
      TRM/Hh4itboa+ppeo4FYyCCXe0Zo53J4kkxCUZTRBu7qU8QgmqFDNwxQUEAwM1FKAUrxulxG
      fGMjsA/7hqA+eoSXmoZStQYCIFetIeliABACur6Oo1wOwC0DfJWglOLk7AxV98sLQKNQQHp2
      NrBtN/R2G0vlMqYnJ0P1w3t22MfL5uBVG0qpRfgh0ji2Ly9BuJiHF5zf7b/xu3exk07jpFBE
      WZYhCRhaTafxSZKgaRrGx+63GAsopdA0DW+KRSSfP/c8R0QYvWYTsXQ6UAXir6eUQtrfxwPB
      TBNE3HwbwuQ1Si0pD6DRrOO4VIZhGogbJhKqiqlsFumJQRXvpFhEa+NB6MAcGyNDfG4OZ4kE
      4JNqkdjYwIf3728Z4GsDpRT7h4fQ796FjH4iC4IkywAGCcIP7YMD/Jv5+VB+ehaFFY3Z/d2w
      PTmtVgsH5QqqszOY+PZbgBAYAGqdDo5KJXRLZaiGjphhImaaQKMB/ckTJFwBvyC4xx9zRX3d
      kGQZpbm5Wwb4msAMv51WC/H79/t+CzRITbNvcYxfPj1Dt1TCFqWB60FYWz+enKCXSGBG13En
      m0V2clIcCaYmGs0mPlWqaMzNIvXNN8jYnhhKLb1fSSSQWVkBI9NW6QqXp2fIbG4iE6DGjQvJ
      paVbBviaQCnFzuEh5I2NyAlevVYLSoiUFmdGMU0kj46w6GI0LzRbLXQXF5FeXUXbNPG6UIB0
      fm4xw8wM0naUut5sYL9UQmNuHukXL5D28WBRAN1aDeWjI6RmZrD84sWNrE3wUhkJIbcM8DWh
      2+3iwDSRHCIIFZ+YACEEnWoViWw2+AJC0FhexvbpKR6trgYS3snVFVK2TUIkCanFRWBxEU3T
      xI+5HGK5HOKmicbMDNLffoeJgPZ6rRau9veRyGSw/M03n2VRjtsLBuA2Ge5rAaUUv9vdxeXd
      u47nYhiiKO7vI7u6CtWHiXhCMDQN+s4Onk9OYjKTEfZJKcWv8nmknzyJNhgCgDMP+LaPf/Mb
      rP3wgxOkuikM2ELcmAght27QrwVnuRxOJyaEbrsomH3wAKVPn2DYuf5BkFUVsWfP8EqWcZDP
      Cxef5C4uEFtbc77z7k/RxzkP19/djDX74AFq5+fD3GIfIqd8UDi2EqX0lgG+BnS7Xfy+VEJy
      cXHktgghmH/0CIXdXZgCN6CXOzO1uorC/fv4XS6HFpdZSinFuaZBtVWsMLPSACMIrknPzaFd
      rY6cwBd2LF5jv2WALwxKKX67uwtlc7Pv+Cg6sSTLmH/0CFcRU5qVZBLSs2f4UdNwfHEBwGLO
      uodqNCrm7CzWzw7eFri1Ab4sjk5O8FMshsQNuP60VguloyMs2rp7GFWBEXqv0UDs0yfIrRa0
      H34IXa/H3U4QSoeHSE5NITk1Fer8UUEBgPMK3c4AXxDtTgcvG42xEj+fV6+mUsiuruLq4MCT
      +L0INTYxAfrsGZpbW4HEP2zqNQBM37uHyvHx0Nfz/YcZB0H/Pd8ywBcCpRS/3d+HGpDsFaU9
      0cuPT0yg12j4XuulIxNJEqYhu/sdBYQQTN+7h/Lh4VDXRyF+EW4Z4Avh8PQU5cVFJ31hWPi9
      eEoparkcJiNklEbtW4So9kIim4XW6aDXakXuf1QGvGWAL4BWq4WX7TbiAdJ1HGhcXvoumI8K
      s9vE3o8/onxVRbdWwuGHXZiUolG6gkmBVukCxYuryO0uPH6MyvExLnd2hN4rAH3rDIIKZYXF
      bST4M4NSit8cHCCxtXXjfem9HmQfB0dUSU0pRe/qEL3UEj785p8QMzTc+/47tKtl/O4//zl+
      +Wf/C3Z/2gaFgen5P4EsDSby+ZU8mX/0CHqng4v376HE45i+f18YFxmG8PO7b3B6eIHsyh2Y
      1TzaNIFHzx/czgCfG/tHR6ivrt54BBQAqqenmOICWGHh1qv71uyaBo5fv4SipvHwh+/x6fc/
      ok1TuLt5FzB6SGTnkc1koPu04deHHI9j8dkzZJaXcbm9jeLuLswIRbS8ZodWrQLDMNBuNNAs
      1ZCZnYeanLxlgM+JZquFt5oWmKobBX5SvFurIS5YIeYX0AqSrlI8jURChpqIo5w7hxxLwKgV
      cbxzhKO9c5DuJSptDTFptLhBLJ3G0vPnmFxdxeX2Ngo7O86C/2EgJybw7R//EXq1Ch7823+H
      2tEH9CDfxgE+F0zTxF+/fw/98eMbad9NuN1GA42LC8w+eCA8f1gG8IPX2oVx6Opau43i3h7U
      RAIzGxuBKSNu122zeI7d1ztY/9kPaOcP0JUmMZW8LY342bB9dITdqamBym43AUopLre3MbOx
      ASUWE54zCgOIFtz4LcIZBwMw9FotlA4OoMTjFiN4eNHC1iW6VYE+AwrlMvZV9bMQP2ARo97p
      eBK/F8ISqtfa3zDjCvvxujaeTmP5m28AAFqzGVjuJQi3XqAbxlW5jN+0WlBGTHSTJCn0ri2t
      qyuk5+c9fx8lryeq9B+mP68MUga91wPV9YH0iWHu63YGuCGYpolCqYR/HgPxA5aElUMGzapn
      Z5hcXhb+dhPEP2q7fn2J7InC9jYWnz0bSz+3M8ANQNM0nOXzeG2aiI0pChs26klN00p5F+jA
      N73qaqC2zwjX8+Dbqp2fI7O87BtPiILbGWDM0DQNZ7kcXhtGMPGbOt79/d9g7/U2es0q3v79
      r1Cvd1A9/4RGS4PRayN/dBKp/9r5ObIeldQotTbJ80thCNLL3d/9SqZE/fSNFde1QllxFb3b
      RadaRTpivSQvUNwywFihaRpy+bxF/K7qyrJo2069A3V6BY3LQ+z8/T9hbus5FIni8v2vUSh1
      UCtc4mT3rXN6GBugWSx6Eki30UD+3TtUz87GkkfDcCMzC71eTUlAQGAt95x7+BBj8yndrggb
      HyilyF9c4KWm9S0fBPwDT8evf0SvS7D5x3+C6u7vcbh/guUHD0AIML16D8lkeE8On/rg7rN+
      cYF6PofF58+gxGKonp464x4aN1TBwVFv4JQKRS2fx8TcHIgiOynNozAeu+tbBhgTypUKfup2
      Ebt71znGfNGSJIklrqQgO52FnEygdnaIVheYmc9g/80x8h/e4PTdKxTPLlEq1kONoXJ8LEx9
      KH36BGoYmN3cBCiQmp+HEo+jMioTjNG/76RDCOS7qetoFYtILyz0rTMepS/Y9YluA2FjQL3R
      wK+KRcic2iNxhaCYC3OcASERzl++xMp33znfDU1DcW8Pk6urSExO9hEXAUGzUIDW6WBKsHVQ
      GLhXV0W+PoxRTyku3r3DwuPHI1XL8Or7dgYYEc1mE78qFPqIH7Dr7Zumt/QfM7qNRl+OUbfR
      wOXODmY3NxGfnLQ8Q45CYf1Nz88jlkyiejJoaIca84iruNxwDGuOUZuFAlKzsyNXy/Dq65YB
      RkCz1cLfXV5CchE/I3r2kMMGsEZB5fgYU/Y4GpeXqJ2fY/HZM0iqAoBy5XD6qzWk5+ehJpMo
      28sSKTuPEP5UAN6rr8bN3ATE9vxQ1PN5ZJaXwCtHQYuAwo7nti7QCNA0Db/K5UDu3BlcSmgH
      cRgjfA4YmgY5FsPVwQFMw8Dsw4e4Jnnb1Yh+wxKwCCY1N+cwAfcDwrpbxqGSDAbU7O+SBGqY
      tj80POGHfe63DDAkZFmG2esNvHx3EtbnkP7NYhGJbBYX799jYn4eE0tW5JlgkDG9/O7puTmo
      iQTq+bxjIAIYkPgiZhchaJ1uYO6P/f/s2hoqx8fCjTRE7dlfhOeIcMsAQ4IQgruyDGov1iCE
      9G0a8Tml/9XHj+hUq5h/9AixiQmL8D08Km7wRJhZXETDrgfE9Hvq/rhTE8bnlR8cG4BkNotu
      ve7WxoSMEDUNm5Db4rhDgxCCx+vr2Pv0CamNDUfn51/M55D+ADB9/z4m7I3t+l86GSgD4gV2
      nZJIoNdqedYWpe72LOt6AEEJcnyfQbMKkSSYhtG3/wHfRq/RQKdaRbtaBSi14iGqClPTsPzd
      d76p0bdu0BHxzx8+oLq15TAAmwXYAu7PgTCSLkwblFKYuo7C7i4Wnz4N1zkhznamojbDSOqg
      8fVaLavo78oKWqUSjF4PRq8HSVFAKUUsnUZqZgaxdBqyer0rZK/ZRO38HHMPH3oM/XYGGBlP
      Vlbw1/k8UktLDhExBvgaEJr47X9LigJT0zyJV3CxUOd21hCD9tkiUYkfADrVKgDL0J9cXkYs
      nR5I9hMJgVg6DSUeR6tUElbGuPUCjQHZbBbZWs2ZZlnA66YzL/3gTlYLBe68ydVV1O1dFMP2
      w6NVLuP85Uv0Go0BQ5y/Ngxq5+egpomVFy8s4p+YEBcUIETIiNm1NSftww3TNG8ZIAisykCr
      1UK73Ua73Ua32+0jrAeZDHr1eii//00YxjwxuQl/GC9Nem4OjcvLoE4H2tdaLeTevEGv0cDq
      99+jUShYXiXBWEUGq3s8tVwORJIwuboqNMBdDQCgA/YIIQRTd++i9OmT8LJbBvABL81jsRg6
      nQ7a7TaazSaazabzQu6uroJyte7D6r6jgicatzSOoveLxiUpSqhKbY7dsLODyukpFp8+dfKR
      Zm3nQOnTp2uVyIPwReNuXF5iYnHRjkkE2znsPzfqFxeQVVV4n7c2gA/4VViKoiCTyaBer1ue
      B3sDirS9k/s9VcWppoFwIXu3J4Rf5TSWhK4ABEl/N/RuF5XjY/SaTWjtNrRWC7FUypb2dIC4
      KKWonJygV69jdnMTaiIx0Obk8jI61SoKOzuY29zsS2kIsgcSk5NWaRe2f/F1ODs0KKWY39pC
      o1DAyW9/CyLLkLjPrRfIByyXh0ez2US323W+x+NxpFIpdLtd/MXZGZL37gGAwzijJsFRPjHe
      B1FcnXyb1DRx9fEjtHYbSjyOqbU1qKkUivv7UBMJxCcnISsKJPtDbC9Xs1hE7fwcU2troUov
      GpqGyw8fsPDkyUBej9fYe60WqqenmB+hih5/z61CEaauI7O87PR5OwN4QNM01Ot1pFIpxONx
      J7UhlUr1zQDdbheqqiKRSGCx10PdlvKGYUCWZScgNrRXiPJ/BqUwEEz8bvXDNAxUjo/RbTRA
      CMHsgweWpOfOmVpbQz2XQ+vqyipIZTMyW1WWmJrC0osXtlAWj4uHpChILyygU60iZZeDDxp3
      LJWCFrFgrghMfiRnZnD54QMy3HrpWwZwgRF3y37wrVYLmqZhwq6wRghB2i5vwpig0+lAVVU8
      WVnB3x0dIXX/vsMELC4QVNXBz2j1i7aGIX7WttbpoLi7CyJJmL53FzPr654eI1abk++jfxx8
      bmk4dU6OxaC3Wn15P4Gzo33OKCoj05wkWXaqyzmBv6Fb/f8hKKVoNBrQXPtWudUgNxPouo5G
      o4FMOo0/kSS83N1FdX4eiZmZvoBYmNIm/Mt2mCKi1BcRFaUUxb09LD1/bum+IQmqz7AOSehe
      40lms7g8P4ekKMiurISaFSfm59EsFjFhl3kZlhm8xv6v0gvEVApN06Dr+li8K5RSNJtN6IJC
      rG6GAK6ZIGYXn9I0DbVaDQTALzc28HPDgLmzA6PT6YsReEGUyBV2Abn7PigGPStstRjxKa0y
      0AcnqcP07TUeBkmWsWTvNZx7/Ro6Z0t5IT0/j2ahMHiPEd85G3tqZgatUunrtwFa7RbanY5j
      RFJKIRGeX6+9KclE0vHGDAPDMKDruqPSuGGaJnq9HsI4CzRNs1SmZBJ/vL6Oo1wOu5oG9f59
      EFkOxwQ+8JOAAynBsKZ/rdOB0e0iOT0dmBvEzz5eZ0UJson6yiwtYWJhAYXdXcixGGZ9dsmR
      VTX0lq9h+k/PzaF8dIS0bYd8tQwQj8XRbLYAXPuATdPol5AgIERCt9uFoihICNxwIjBi1zTN
      ygdRFHQ6Hd9rOp0OYrFYX7Cr0WgIZwzgmhHms1ncicexc3iI82wWyuxsZOnlJmqRT1x43E5x
      uNrbw+KzZ9EVGOKt9Lhz76MKHyJJWHj8GJ1aDbnXrzF19673RnmEgJpmXwR4WGGnJBLQuUDm
      V8sAhmEAoJCl6ynby28syzJkWXZ+r9frjvHJruN1cV4KE0KgqipUVXX6FUlpwzCgaRpisRgM
      w0Cj0bDH6A9mVD++cwer7TZ+WyhAmZ+PzgRWY9f/DonKyQkm79xxiCeK7eA+Myi6PAwSk5NY
      fvECpU+fUM/nMffw4UDB2+zqqlXvyLXybhhcG/QWvloGaHfacL+CvlRjaq0SkiQJiqKgbqci
      yLLcJ5X9/PBMN29zG0P7jqndhiRJqNVqke6FzQbZyUn8AOBfCgUoEYo7EUL6F6kAfcwwQI72
      eXqnA63dxrRdqWIUwu2fhajjwRkXM8ysrzu7w8zcv484t745NTuL3OvXmBwDAwBwUqVlVf06
      jeBerwdFUSHL4uFRSmHYUjqTyThBJ0rpgErCXhybEVKpFNLpNBQ7lTYKDMOITPysb8CamaYz
      GfygqjCurH20AnNcbPBGqMQZo4PE77SK4t5eXyqwXz9uo9mdc2//YH3o8N4YPyiJBJaeP0ej
      UMDl9rbjsnT6GXEGYjZS9s4dpxDAV8cAmq6j3mygp/U89WsAUGUF6XS6LyglAsvjSafTUFXV
      MWgNwxjKmzAMWByAuVnnpqbwB7IMo1RyCHiYcQwQAoGTD1M9PkF2dXXAhRvUjydx8cdvMNOV
      EILZjQ1M37uH/Lt3aFxewtA0aJ22ZQO6MMyKtNjEBLr21rFfDQOYpolOp4NGvQ7TMO2MS/G5
      hBAkk0nEYjFP1yWfc8N0dhbg6na7jq7P/t40IzAmMAzDmQm+pRR6qTQ6QXEuSwpqbTnabiM5
      xO6QwufAVDDmkPBIbBsVfMSazQbtSgXnr15h9dvvILnswXa9ila9BUopWtUKdE1Ds1JBvVIT
      sgVjbifHCV+BDaDrOpqtFrq9LggAiUgwTMN3io3FYkgkEmg0Gp5uRQoK3TCgSLJvKgL7jV/N
      dVNgbTMP1Fw2i++qVfxUKkGZno6kVojPs45d7e/bK7qoqx6QhTDGLH+Ok4PGDA46XkMYAHqN
      BnJv32J2Y8NZ3mloGkxdx52f/4EwkPXqb/8L4gpAlFlgMoWl5RW0KwXs/PQe/83/+j95erCK
      +/tY+fZbAF9wBmCqS6lcQqfbcfR6Siliioq4GoMqKIYkyzLS6TS63a4wQMUgEQkxRe3LwPSS
      WEG/jxOsH03XUalVsTA9je8BaOWy83tUMJ1dq9Vg7u5icmICiqo6RMNq7PiNiW9L9Jtjg4yh
      NKEIVwcHuPPzn8M0DGtDPEpR2N3F3NYWRIuOCSHQWk006jrWvnuG3lUBjXoHdzbWcP/Fd56E
      7V4dNvIMwE9bokghI3TTNAFCoBs6dF2HoeuOIcuulUNIYEop6vW6r33gNcagc/iUhZsCz2iG
      YaDT7WJlbg5moYCX5TLUIWYCapowTk7wfSqF7NoacldX2Lu6Qmx21rJ10E/gQc+jz+iFh6dp
      TKCUQmu3IcfjILKEicVFxDMZ7P3VX+HuL38J4uEIAQA1HoekxlEvlKDE4+h1mjjfL+Hesz/w
      7Kt6coKlFy+cYyOlQzOi4ZmAUgpN06AoCjRNg2ma6PZ6ltuSuw4AJEIgkWuiH7dkYeMJq+M7
      XpYbUoVYgpzDAKYJCorJTAYT6Qkc5nJ4rSiI2TvIhxmD3ulA/vgRf7S5ae2D226DEIJ8uYyT
      +Xko2exA3MNrbPzvbiYAboYJKKXIvX6FpW9eWPaapqG4u4upe/estb+2fRMUkAsjOKtnZ5BV
      1VGxgBFnAF6amaaJdrvtBIf4nHlCAGpezxAykYSzxbhhUgrTNCCRcDV63LPZuOFWsyRCoJsm
      mq0WJCJhfWUFxukp3lYqiHtFRTm0CwUsF4t4trGBeDyOSqXi9LM4NQX94gI5SYKSyQy/TJPF
      H7g4xLhAKUWv2YSaTFkOAl3H1cePmH/82JL81DnRs+8o76lxeYnV77/vOzb0XO82LJlrUQQC
      AkVWoMoKFEl2pmHjhr0vEpMetlQPi5vwbnhFmGVJBih11htv3rmDZ90utGrV12bp7O/jWauF
      rdVVxONxYRmW1ZkZLOXzfSnI7ja99P8+AXWD7+jq40fMbm6iU62iuLuLeTsS7NgaIQWl6Fnx
      tt3VwYEw52goBnC/UMMwAn3xBIBhGtAM3VKHCPoCOgPtm0ZkQnQTALFVLIOaID47lw+b6RgG
      vArmvh9JkqAqClTbWGdM8PDOHTzpdqHVav0RWFtflt69wy+npjA/M+ME9dhSTTfWZmawcH4O
      k5uRoxj9wzybsG3XczkkJidRz+XQLJWc1WJ92ach++P/uo+ZhoFuvW5VyXa/g9B3xTXM/Ofs
      32FTCSQiQZUVyJLcp/sL+4hA/JRS6IYOg5p9BGeaJkz7mGG7OkUQpfsOOwvwdgf/cXtTJEly
      Vozx/bKqE5srK9hqtaDZhE0pRfvyEnOHn/DztTUkk0lkMhlIkuQ7+1JKsT47i9nTU8DHcTAu
      5mf3+fFv/ga9ZlP4e6tUwvnLlwAhVsU3RcHM/fsj9y16d4QQFHZ2rGWVBAOGzNAMAFh6fqvV
      CrWwIZIUIcRRlcLAME2Y9DpxjmdQQm3X9Q2rW/ys2MeALgPUTfgimKaJer2OB8vL2Go2oTWb
      6Ozt4Umrhc2VFaRSKUza0qxer6PRaPjem2EYeDg/j+zJCajNKEy9cP7twsff/iN2X32AaWrY
      /qe/R63WxuXHD7jIFQOfhdbpYHJ1FZWTExicq7rbaCD/5g26jQaWXrxAq1RCZmkJGXsb2WGZ
      0I+29G4XoBRKMiGsGhHaCGYvmHWoaRp6vd6NuAy9Su15QZYkyJD6XHzuaTjqaqawhrCXOuH2
      TvCSPwjtThs9TUO728GdmWkkyhWsbG46i2/YCjQW0Q4DTdPwdGEBb46O0NzYuF6d5nGPhpKE
      0jrDy/90hJlvf4DUPMdZUYdR/hHzy//RV3JW7cU3SjyOi3fvMLu5iauPH6Emk1j65ptrSW0Y
      iHNLTccFng4K29tYePrU8/2HZgD2oE3TSlMYhvgHiFKgclBKI7XLorjC5K0I4xrmBbgdATxE
      unPYPpjHDAAazSZS8ZjzzJmbmUFRlNAxkW63i6fz8/ir42Nk7eoVXshtv0EqO4cHv/gjFHZ+
      wqEyAbVVRu68CBNi1YE99167DSWRgGTn/F99+oRFQTWIzNISaufnmPTY1jUKeIFDqRX56NZq
      qOXzkONxpKanEc9koKZSfTQXigF4guIXkkQdnFslkCSpbwshRohRpK9BTcjE2jnQjyDDjM/r
      uCh4FMbQY/dBCLFsELt6Qp8r1GNDa0WSoZuG1Tes5+4WFqqqBi7kGRiTaUL1iaAzZKamYEoq
      upVLtNoaZu5No2s0sf79t4FEwy88l2MxLDx6JDxvYmEBudevkVlaEpc7HALXzxRq6hkAACAA
      SURBVJaidHCAh//hP8Do9dBtNFA9PYXW6VjvQ9cRS6XCBcJ4Y46viBYEUZAsCIQQ8Z66AjDj
      lkWQ3YGmUTAu1Y7p+rphgNjZmrphwKQmFEl2hIAIlFJohg4KQJEkECKBwHqusVhsoERjGBBC
      8C+FAtTHj4VMPawqwreVf/cOi0+eODWE/DCO2j+iMdQvLmD0en27ZrrHovd6/kYwpVZ+PSP+
      IGPLfS1vCAZJWa9B+l1DQSHbxGMYxtiIP0y6QFTIkgSJSNAMHYZpGcuarqGna54eLys9RLZd
      yCZYZIhS6iwDjQpKKZLcTOu2YYa5b/c1sWQSXYEHSIRYKgXTMEItkA8Cr3LWc7m+FWQDKTqg
      UOJxfwZg6oSu655+ZqdBW/qyBeZhiDEMg4jad1Qpeu3xiZrSzOvoTAqzz03EBHiCc76DrV/p
      91/z50nE2jBOlRUQkL51DO5kQPf9eN1DglJHTRGNMwpEzzw2MYGOHZUGNVE8OUKpUIJpaCgc
      H6OnGejUK6hcWecsPHqEws5OpH79UD05wfTdu30OiMGB2/ZmUGOapqFlRxLDPBw+6BPEMLy7
      kNeXB7iVWoExntCjMI8INxn8CgNKLXtAIpJzH7qh9zG4k5xHrvccdt+rYRg4Pj/3NLrdXqhG
      q4WCpqGwtzfU7Ou+BxFSs7PXhXX1Lj7t7GPvX/4B7//2V6jUm2jVynj9X/4O9YpV959IEpLT
      02iVSgNtVU9P+1ypQTANA61yGanZ2eD3G8QAUYJcQHhfP0/0/DHWhvtcANANAwa9DmwFrfX9
      HIQdlRGtyLQ1LolIjvpGCLEZoN+lydpWZcXzft7n8zicnETTo4QgmxEIIbgolfDKMJD87jtM
      3bmDi/fvLeIaQRCIEq0lWYbGpV/ULnPodSjufvcN6qeHKOc/olqVcP7uPTT74qm1NVRc+xW3
      SiX02m0U9/aQe/PGV01i76L06RPmNjdDj9+TASgVLzXkVRGRS9MvuutHLKJILJP8msEtcqe0
      L7PUDd9pzzUeN0Tt+tkuboksbNNW0djzkiUZiiRbNgFnABNCPAnda0Y9ubxEa30dmXv3sF0q
      +Y71w9kZ9qankbh7F6ZhQE2lsPL8Oa7299EWSN7wsFbIuNlAtqtsgEhIJBNQ4jE0rkqArICq
      C5ibN6CkM5C52526exflw0Pne/X0FHMPHmDhyRMsPH2Kq48fkbMDae7767VayL99a80iIXjZ
      oTeRF4hS6mwI4SZKXgXhpQuTYiLJHkYlYtUd+KrKvGpkmCYMbk0oMypFN8X3K7px0XfDTpvg
      22UMqMiDxqZf+6JZLOy5fuDbqdbreKuqSNo+9G6phIflMhbsgk8MnU4Hr6+uQB8+hMSIEtfe
      NkopysfHMA0D0/fu+Qowdh2rLs2vE6DcNwLYyxi/7Qu0hVG5qmdnyK6uWvt75XKY29y0riNW
      Rio1TZQPD9FrNpG9cwexdBpXHz+CyDJmHzywZrp377DM5fz7QTgDGIaBVqvVJ7FFUpv/3W+R
      eRDx84zEt8t7JiRiL5iB2EsThZi8zrPadY33hlSpKON1Pw9d1/G+3UaCq3KcmJ3FvsstWiyX
      8WOrBenp0z7i59uUJAnTdlGqyw8fYAoiywOzHHs0/P30sQIFkSxfu+ie/e5dVlXU83mUPn3q
      zw9iTgGb0JeeP0erVMLZ73+P2c1NzG9tWVmkkoTZBw9Q3NsTtu/GAAMwF5v7mNuD4SbWYXdF
      dBM/39/AYInkLIxWFdWZLcJGgkVG4XXbBBIIDENHT+uhq/XQ0zXhbPo5FtF7gVKKd/k8Yltb
      A+qetL6OI3tLoo+5HHYyGcQ3NjyZmAkuSZKQnpnB/MOHuHj/vi+JLZJnDYwRCPR2B1cHB5Hv
      Lz0/j/rFBUCIEzkWGviShPTsLCYWF6HYFfvYJ5ZOQ00m0bJLz/iO2a0CaZqGqiAXnVIr6spW
      cQVJdfe1IqJxuxz5gJAXM0mSBFVVofnsZCi61kvqsDEZpgHdMPrcg0Sy1hWHGZdfP54MzbXr
      PkdUzoRSiqPLS5zfuePk0LA+GZp7e5jodNDb3IRil4oMNM4lyUlNJ4SgsLsLNZ1Gxt75MiqK
      e3vI3rmDZrGI+MREqA00eGidjrMphx8ahQJAad8KLx4X795hbmvr2h6x0fec+R8MwxggfksP
      Np31u+5QfhiIJK/I3+43kxBilTCUJKsWqJcUjqKXa7oG3dDR1XrQdH3ANy5ao+x2M4r6qlSr
      uCgGZ00GGdDudquNBk6z2T7id1+b2tyE+eyZs9F1mHdF7ZmAuWHnHj6ErCiWbh14dT8MTYOp
      aYilUpiyd2j0ijl4QU0kAokfsHJ9FHvzEpGQmdvaEsYX+mZ+4FpCi4JdTMrKkgQJ/hUWmItS
      BDfRR9GBVdVSd1g5dPf4/OAn+XXDuCZ8t00hSVYUVsAAPDOLgmfn1Sr2s1kc22W9/QzLsIzc
      0zR86HaR5PR+z/sdNo3DDizquo7k7CwmV1Ysu8D2w4cRe1f7+041OkII5h4+RHF/f7jxBEDv
      diH7pPG0y2XP2ccRxMC1v19UZkSyp8cwILCjmx6S0R1tDQIreisifM8xhGiXER6oRwlwQoTE
      L2rH3S+lFFVJQmJhAadLS9ixd4/0izCHcRy8vbiA+uBB4L2FQojXSSmFHI9j/sljFPf2Qj3X
      XrMJORaDbKdtA4CaTEKJx53NrscKQvr0fx5Gr4dmoRCYaSr1ej3U63VnSyD//gIegodqExXM
      Rcf851ERhtH8YgmyJEOR+6uQ8XEM3jvljm0YhoGmLZXik5OobG7i5dlZX9q2yGD3Y4yPuRx6
      Dx4MVE1m8H3Wlk3aP/NGUGwoBQxdD/U+rz5+xIxg3e30vXsoHR5GVoWCoLXbwpLplFJc7uxg
      4cmTwDaUVqsVWD/S7fVxwzFiBfpxVHuBjWUYwg8LP48Vm/HCerTcs8B5LocJriCtEo9De/wY
      P+7u4oW9ZVKlXkep2URDltGSZdxRFGwKDDlCCEqVCvKzs0jYpfyiChYRsUetpynHYjB6vb4t
      YN1oXFwgs7Tkmdk6++ABrg4OIkVpRTBNE4183jGweTB1vXx4aOUChVAF++7IS7/3UmnCvIww
      wSkGJvXDYMCN6XGzQkIm/q5SR0USgK1fEB0HgJJhON4X5zdFAX38GL85OoIpSVCWlhCfmIAs
      ScgAKNRqSF5eYtW1eYamafig60jYSwajIqw3KghTd++ifHSEWRaUcoEaBprForP9kQjxiQk0
      JAmdWg0Jtu8vNy7RWPVu1/HtN4tF1PN5EEIwsbiIpefPBwicEIKOXb07kc2GujeHAdjD4VMc
      GJFRGm2VFj+gKOeGIX6375sfpxueRI7+XRupfYyQa4npZ7gKHQB2UKmuqkiK+pQkpNfXhdfG
      s1kcdTpIVquYtesBUUrx5vIS8WfPhOOIir5+2TN0H/eAmkyiZ+f2iM6/3N7GvL2+wO+dz9y/
      j9ybN05dTn5c7FpD01Dc24Op63j1F7+GkppCKg08/+/+CMsvXni+Z0KsBfbloyMsf/NN4D0x
      OEYwH811D05EbFGI28/b4e7LD8KACCFCf7qfmkOIVaeIEYIsyYipKlRFtQxg2/iWZRmKojgf
      r4U6bAy1eh2GnYUYBZRSxBcWsD05iQs7L+enszOYT58OSLlhpLhbTSNAn98/FAix9goG7I/V
      5tX+PqbX1x37xG9sRJKw9OwZ8u/e9Z1Xz+dx8e4dzl6+RLNYxOLTp0hOT8OILaBHplBuZnHy
      ald8b2xssPz+SxEFhuJVswa4Nib571HgJTHGBZFBKZrBRNeZlFpeIEL6VpS5PV7u6/klnOx3
      9lzy5TLSnHSLivjMDPbabRQOD9Hb2oLioW5FgZ/NFgWJbBbtahWJqSmY1Erl7lSrkFTVKTUe
      BpKiIDUzg9Mff4TebiOWTmNydRULjx/3+f5LJ3lAjjvjPdouY/HhEeYe3O+/F/tvcX8fMxsb
      kV3ASpT0BZHbz7dx+4Z49SpKf14MJ/Lu8PaLYRh9cQfRfVB6vfuISK0SwTH2petkOf7aqiz3
      Ee1QhLa6iub8PBTOlTgsxil8JhYXUTk4QGJqylGdKsfHWBSoG0Gq0OTyMiaXl9Gt19EoFp2y
      KDzKuRIItx8AlCRe/+Vv8bM/SyE9PQNCdfS6OlITaZROT0EUdcAoDgPfcJuIyETHveCOKyiK
      4gRawiDoQfJE73ZHBtktJqV9btuwYC5aXncFrAS1djKJDHeulwrJ/yaCPAbi98Kw7mlZVaHb
      xRAotbZfmt3cvN4tnpvtw/YRz2SEQTJKKSr5CoD++qiF3AX+8v/4v3D3F8+hduvIrNzD/OI0
      dn79z0itPsDs/XuR78uTQryIZxT/PltfPA7wdkWUZZjsWjAVKMAn7uct4lGqVCJtfDcq/CLy
      XvB6d2HfKZEkZ8WVkkhYVRVcM2hU+phcWUEtl+s71qlW0W4J7ouaOP9UQKfawdL9NZRyeVQu
      SkhmJ3CHW1Qf5bkMUDmTcH768yhMACBSNFgEnvi9bJjgcUbv26vcIQAUWq3Qrrdxw++F80tV
      3DNmVBUpPT+PxuUlaqenmFpbG4t9MrGwgMblpdOW1u7g93/+jyCJwerYRFIhKXG0ShW0my0Q
      qqNdKeJw+wi1y9zA+WGgAIPelVEJfFiEcWUytYgd9/IusXPY+W41RJYlGCYC+SDstF6TZcQ9
      avx8LvAq48Bzw/WtUgTPfCKkZmZw/vIlFp8/dxqj9HqxCsgwrVpuVq3dhqyq2P67H1Gpir1t
      E/MbeDC3jq3H09j8xS/AQmpP/+RP0SgUcPH+Pea3tkDkwb2lvd6D0hcidzHAOD0Qbm9NGInt
      NmwN2l8FTiaDYXBRW25bgrlBZSmc6zUIvV4P3XQa7rQsv2vd4xsnHPvk+ggYxbL5gP0m0uG9
      ICkK7v3iF9b7MI1rRmLXMWYICdbn3MOH2PnLv8LFcQONdgxEEq/Ag6kjO6ljYWt94Pf03BwS
      2Ulcbm9jcmUFSXuTkcAx5HI5GuTqc/8WBqJoqogg/IpCMemu61ZJdZ5BZbuGvFe77mOi735q
      gIiJvM49OT/H+YMHTgqyV5/u+7tp7P/uH1GvtDF19x4qB3uIz93BhNJBIX+Je//m32N2JgE+
      WcJ3TLZ0t7JkJei63jeTDD3TaS38n//b/478aQ/T0/No6yaW7tzHwZt/xMOf/7dQbPKIyw08
      +uUW7nw3GAFmYOOvHB/D0DRniaQfbnSTPEdyu6omB13D69mOS5NIsOO11sowMljHxy9IJ9J7
      RQacVxuiGYv1XTaMAeLn+/wSoKBo1eswdQ29bg+9Zg+pyUl0Gk0Y7Ta6msEG2b+JnuA5sOAZ
      AKfKtiRJkYlf9A5O3+zi4rgBSYpjYmYBVOuBqGnMLS7bExcBMbr4g//+B6z97IWvn5+Ndfre
      PWQWF5F/+xaaR1UTx1Po15jXhQA8jUG+cfcx9zX8MTejuGsFSbbk8ZsxhiE4npDDEj9/jBCC
      mqqOxTkwThAQxCamsfn9c7SuSrj/ww/Ibb9FrdXF+jcbqJ2X+y+wtSReJfISCib1ruEUBN4g
      P335Hm/+bheQ45Akgl6vA0J7aJYLuDw7ROkyb5WOURL46T+/RLtcCd1PPJPB4tOnKH36JKwi
      YT8kbxUI8F5a2NcId5ypFbyHxg/8NaI2/SBzoXf+er9am1GN/CCGkiQJ7XYb/6RpmOKqLXsZ
      5V6/3RRqF2e4zBWx9uQpysf7UKeWkElJOD++wN3HD68NVu5xkIBtUJlQCpO4yAuJvvsmxCb+
      PUBOeFw9mByZSXXxb//n/+i7CMYNQ9dR2N7uS9Sj1uCs2SUsA/Dc7kUYvFS/aXgRVBADjIv4
      WV97h4eofvutMGdH1P+XUokY+rw2QL8XzNGCvAUFu14JwwDWBQPv6uTVe7z5mz0QddBm4p8P
      n7BoN4CZOeAX/+OfWhm2IZ/l+atXfQl4XIfhIsFhpNfnJH6vsYQh7rBuzbAPtyZJnp6PcRE8
      78IctR07j0F8AnNtMk7wGrr9nv3uz9Nh8PI93vzqI6AMSn5CAtZhEIKrookf/5+/wh/82Z9C
      tjMLgpBdXUXu9WsosZhViLfXgxKLQet2w6dChJGIYV/2sOqAW+/kx8Qzq5/71X1sFBiGgUY8
      jgkfL9SoffFuy+G87Kwd9BO+V1Nu/6gHTGpCkRXvnUEF992tN/D2b96CxIK3gPUCIRIucga2
      //qf8fjf/yFkWfbN+gWAifl5SIoCJR6Hkkj0jW2sO8V7DYInSjehhjVceWOYP8b3zYxnUUzA
      Ly7g1V/QuOqNBhDS3+weswjCWc1eZz0KHBbyu2WO8EMxGgXa1SqKe/vQehpMw4BpmNbHpKAm
      BTWZI4cARALVDUiSAip4tkFu677fJBkH766gJn6Hzf/6hz5VySu+khTsu1w+OhIzgDvayo65
      iT2sketeReWpW4Zox+t30fj4exEV33KPg+USuVM1vJg0Vy4jffeu57ijwp/pLK87AKcaZxhC
      vTb4vM/ROh20Ly6hNBqImybM9XXEfDIrDV3H1d4eJFnG9q/30YOVAiKyGR3PEfPqqRmHYEUu
      ab7YmZ+NQeQYdn/MIZF+izvfP3euCatVaO02dC8ViJfMbqKKor64VRQRl49DTx6Xv9193+4Y
      gbuPxmd1fRKuDO11VDeQCdiYnT8UvXoDvasryI060pqGOUnC3PQUUvNzIITg6OQYheWVgd3q
      KaWonZ2hXSljbusRYokEFj/mcPyp10e8/PluImbHeGcFe678JoyBuj01IUHDyattZJdmkVle
      Dk0DlFrbJy0+fWp5gfhBBKk0TDJ6+fr94OehGRYiZmVwSyGRasSDZauyrUyDiLvZauFNqQSy
      tQUlgmsu6H4AOAVorcHC0mAIcYg+pKp+3SalaB8eYrJSwUwijqnJScTj8b6CwxJXGPj86gqn
      0zNI2Iv1u/U6Sp8+YXJlBam5Oaff2tk5fvN//y0olUBBQKkESAooJFBIAGFOAgJi/5sXomEd
      LKAmoLehSD1MLWYh6TU8/tM/xsTiIqonJ0hks6GTEVvlMrq1GuY2NkDOzs5oFOnJB43cqsbA
      oF3/vgkG8Ksk55dx6scAouCYFyil2Ds/x+X8PJJDLl5n7Tj/dnlhvPr3mwFYtWYCq0aOubOD
      ZzPTSAgqgVNbRXLHAIrVKj7GE6jValASCcysrzscx/fr7IPW7aLXakHvdmHqOmCa6DVb6Lba
      6LV7MA3Le9RttNBtd6FrJiglMHUDnXoLvU4Phk4BIlsfamBiOoGpxSymlmYwvbaM7NISIEnQ
      Oh1cbm9j5v59pKamcP7mDea3tgLXUlBKkbfXJRNCQE5PTz2p3+1x4Y9F8aeL2nP/Niy8GCAM
      s7l/d9chYi82KHWbUopSpYLtXg+xzc1QZf1EbQDXxB9OvxczAM9A3VIJ2dMTbK2sDKWuvTw6
      gvnNC2eFGu+SdTs3RPQS5R3zmkW3XkcsmYRsF75i4N+1aRi4eP8eq99+C9M0kXvzBovPngnf
      O4tfVE9PEUskkJ6fB6U+26S6dbphidVLBRm1Xb9rh3nRvLHMxzRYW37LK03TRDaTwc8NAzvv
      36O+toZERO+Q6w58ff+U+797LPblAAU6h4e41+1gfsiZqVytontnDUlOqtpNO8si3d68UWwi
      nplY6RQ/+44txGfvae7hQ1zt7/ftOGnqOprFIprFIqhhIDkzg9Tc3HVf/AzA71bCf0Y1Mv1m
      jGHbdkqaCK73qk7nNQOJvF3uWYVViRBdyww7a4MNGYVKBQeKgsT9+6EXaTNvDe0jfbemT10X
      MLvAGRQAwNQ00N1dPMlOIh6LWYTJMXAYIqWU4nf5C8S/+UYo9dmxPlWYs1XCIkpsRnRu/fIS
      MAxM2jNc6+oKjasrS+3TdUiyjPTCAtKzs8J3ofDuRb5hP3/71wb3iw0ifj+mC+uVcjwcTCTC
      oj+TmliYnsa0puHdu3fobWwglk4H3wNEwS7iIe2JTZE8w1h6fLdcwfTZGR4vL8OkdlVvSq0s
      zgjq68nFJSSnFqk9Mt6JMHAD10wa2kXrsns87RmBfcnGksxmcfXxo+MFSkxPg8gy1FQqlCqq
      +E3t43Lx8W2J9DO/0ixuMAINInZR+RJ+PGHgJRwAKyOS7d1LCEvTJlYAiFCoqoqfrazg5PgY
      x5kMkqurQz5PlyuIAiDME9TfXufoGA96PSzZBWElSDDQn0sT5s57PQ2niQQmUinXjGSPRPQs
      uVkgbMTa/S7d6HtPxPmf0xelFPV8HqqrLEvcVXnOdwz5fH6sYp1Xm9xuR6B/CaP7XF7n5o+7
      dU13WRKRO83LWA+zkw2vz4oYjVJq19I3mTJsufdc0z8TLo1mE+8bDUibmwNGnbvfvu9CcuVy
      88FUHh10dxfPs1mkUqk+9Uw3+zf9QIBRTynF25NTmN9950j1KDbcOIWmq2H+R4BSnL96hZn7
      90Ov/mLeLl59HCoVwu0G5f/NS90gScsTGTO6Rfq4uy1RFNH9XXQuk+hRd3kRqU+yJEMiEnTT
      cF6OaZqQ0M/sAJBMJPCzeBwfd3ZQWlpC0mNHk77nyMUB+iQufz4IupUKsqeneLS42Jcibpgm
      qGu/BkoBiVhLSU2fuWA6pqL200/oKDI0WUFXlqFkMohNT0NNJvuqVI+L4Hn40o0z0xBIshya
      +K/BcQAAJayqwxOBaCfIUF372BJ+cQQRKOAYnV4qEJtVeC8FC3SFzVr1c90SQqBIMkxqWsxA
      bab2aGdzcRGVahU73S5Sa2ue/Vl9XL8ofibg1YvW0RE2ul0sLC7ABIWha9djdL0fQqwUZvZc
      ZBArCCZ4dneWlpzrZHvlV6fTwesff0Tvu+9uvPqF+3069+OaidiGflEMabjOVbxesFsC3sTG
      cKIbFU2p/MdJeqIUEogTufRSedyzFXBdyDaM3eEnINhxmVgSUeHccl7tzk5PI3Z+DngwgNMu
      98KBayagoKC6AX1nB99ns0jOzMAwDafUo2jssiQLA3uSJFnXof+9X18nOfvBfaxUgB9+QFyw
      9DMMfvxPfw5iUqjzKyh/PMbS02eYUDs42dnF2h/+D1hZ9HYUOO/PdX+yqg4I4jDqJX+OInpR
      buK4Ce+PaDYQuTPdRqhbTQriepH+yrs5w8wGQUxgVUgAFK6Un4gJWBuTlKJhGJ4bXrj7vm4A
      0Ko1TBwfY2txwe7bvg9CYHmNOF+SRBzbkeK6IC6Dtbaa041hM5pt1BNC0Ov18PrqCnj0COoQ
      AT4emqZjZnoJdPYKvU4H2ZV57P70HumUGnit6Pnrro3c/WjBy7snvKObWtTiNmD9EFScKwrc
      RO6niongng0HGJVI174al5QV9TEdj6NUryPuUiWCxtU5OcVas4GVZW73Rt47QihALW+USSkk
      +zeLKQb9OW7hYKlvnI+92cTbTgexJ08AyT845x63+x3JsgySlNGpVWBAQbtSQfFMw0Q2jUa5
      gWwm2k6SAPrqp4aliQENQbQk8kuCEc8olePCgC+j6McIQTaACO6F//z5kiTBMAz8qlzG1KNH
      geOk1PLhd7e38TSdRmYi7cxIEpGuM0Q5F6ejztjEz5hWcalCfX24xlool7EXiyEhUNWiqhlh
      QK0GIl2Xe/0ac1tbULkNSaK47z/8w1/3zwAib8eXwKjEH8kogtiL5HXvQW2y6/o24BCoeUut
      FuqvXkGTJJiSBKooMFUVVFGgJhJQkkkoiQT0dhupTwd4sbxsvR9gwPAnIJBkCT3bCHbGb9vR
      BP27WbrXOrj3PTsuFHA2N4dExFqnIwksXhgR70gCpRT1XA6NYhGp6ek+4nfO4drzG1On1bpm
      AN5Y/FKE76XyRAGlFJqhQyL2Jhgh+3XHD/jfovQtkoIiF/HW6mrfdaw0jGma6NZqaBcKaHe7
      SCWTWFxd7ZPqXmNiqg9wHXBUpGtV0stRwGCaJnYuLlC9dw8JjwUxw76fbqMBU9eRmJz0LmwF
      W8VyOQAAgJomKqenaJVKyK6uht4FRiQM2TE1nbFUIL8c/8+JUYvmAoBuWkQkS9Y+v15wZ33y
      izHCIIwrlx1zLwqJImwIIY4Ry6LNojEyx4Vu5/crsgxZkj0Z2z0+Xdfx8uIC5sOHvmVHIqs2
      ponSp0+WS1VV0a5UhBUavGZgapooHx2h12ggu7qKpGvfX6HLNGDc7JxW5WrQDfqlMA7iBywp
      KHFlE8OAUuq7uNrrmmFBCHH6C1Nbx/LWeL8nptYAGPjr9zzd6o9KCLoBnpQoaFcqqJycYJZb
      Ytkulz3P71O/TROFvT2YmoaZ+/cRW1/nT2Q3MKDzh2UICork1KylAt2kuzMI7OWNa6GMRKK3
      wySxl0s0itfIMkZp3zhENgb762dvhOnLLTiizGB8Wogsy/hmaQnbe3uo3bsHdYjdVhhMw0Bx
      bw9KIuEUpGL3GEun0Ws2+xIE+2wkAK1SCbXzc8w9fHi90o6Q/jhASDvP/bvWbqNdrWBicREA
      hSTyAHwusKWH414lNixYgIw3Ft3rA8LkEhmm6bkRt1sXDzPrid6NSU2YtucnslpC+3fT4ctQ
      PllexuLZGXqV6zKEUbQEVqZ85v59zNy/3/cbIQSTy8sDG2Lw4+pUq+jWalj+5pv+ZaZDEL8b
      zWIRleNj1M5zsK2p0cuijIovoX75MTtfXoMn9DBeIkqpU8LdNE0nEOWW+H3BKK4KnygQKNTb
      bZ++LFs72kdhIJ6ZnXumFLJ0PbaNxUXEi0UcapqzJtivbVPX0alW0bi8RCKbFRqo7JmpqZRn
      wVpd09AsFDDrpGFfX8vfxzAMXzk+BpEkzG1t4erjR/TqdcQzmS/PAF8CYXR9URTXS790/oLz
      QxNi5SqRfvWOb4f9ZYTuNsRFfRJipTaAkIEdLflxBc3qjCAJuc4R4rE6N4d4pYKd01Mk7tzp
      +63XaqFyfAy927XsJ0VBcnoacw8fQlYDorq2KsPr7oTY+wPv7mLhyZO+fZqW/AAAFCpJREFU
      MbrHHBWmYaCws4PJ5WUkp6dBKcXM+jou3r/H4vPnX54BogQuxoFxRbn5MbOFJyKCNagJVVJ8
      75GfGcIE5YJUxqgqrdfY5qamEKvX8dP2Nhq6bi10h6XHz6yv+1bCYAtchPYTIaCm6ezkYuo6
      Lre3rTIlY1SHu40GykdH1mJ5Pm9IsvY6A/VZE/w5wOfjfA4mGLet40gwWIljlFKndDjXq5WW
      gGAJNopBHKUdr3iFCJOZDGavrpB8/jxQug/06dHs5PIyaufnmFpbg6nrKOzsYPHpU0iyHJhu
      ERb1fB69ZtNiKvdMAmu7p2ahcLMbZATBMA0nmYtSCt24/j5uuPXecYIQbtMOTuIRWJmiUV4o
      M7xFbmEvP77f5n1hxu6HbreLRiYTuLxQpDIKzwNFanYWrasry1u0v4/5R4+cxMBRiZ9SivLR
      ESilvjvETK2toVUqfWkVyMqklE07R11QvlBkGEbFTRI/D0KIkxod5J+O0qZborO2b/q+er0e
      fqrVoHJVFsLAV93DtYAo7u9jbsgyMl4o7u1hYmFBWAvUPa7FJ0+sNcEiuKfIm4gUS4RAN01o
      ugZVUQeI2zRN6KaBa0Xj2vfNG3pE8g4UiXJd3Pc18n1w4xYVaWX9jtJXn80xBNF7vTuvMWma
      hp8qFaghEvaC2qLMXcsdkxQF2dXVsRL/5fY2JldXI+0YL3n5pN0BqptYEMP6MW3d2S3l2DGD
      Te/URE/XnE2x2ZTf03rQdE24+ssrM/Nzg+//c4/D797dz4xSa1PC35fLkLe2Qo/VS/iwwCDQ
      L3gWnz1zUiRGvQ8WNZ6+fz8S8QOAwjahc4N3k93UCyOEQCGyoy8PTO32X0u6W3OA4polCCGQ
      YS3bM0wDhEVgb5jYvIzIoOfFAlgyvqzhf+26pYB5PYsZpomfikXInOQfZfbyKndCCEFqZgaN
      QgET8/O+s4foGDvf1HUUdnfDuWBdbRJCvI1gXoqGcb2NAl69chtyiiQ7C9C9HhK7XlFUZCYm
      EIupoXekHJZBKOzEu8jXu0L6N4g+qW4YttPBgG5aey6z8Rv24nnDMPCyUID06NFANuYwfQMY
      IH7+HU6urKDuERUWton+92X0erj88CEa8buKAURaEMNUpc+1DVIkEAJJssLbuu3j5dU7vzEP
      awtYvv/+/KOwuvZNSH93pJQJFMMjLaMPJsXrqyuYW1sDSzWHGWuQV4gJjl69jsblpdBj4yec
      OrUa6vk85h8+HCl2EMkCYS83SlWFzwUCwDRM599w2TWMCRzD2eVtciOMsSwLHvy4DOuo6HMK
      cGNgUjNoTJ/yeRiPHw/U+A/bN+DNKEIVG9YsGstMQD85ganroaV44/ISvWYT81tbkVQn0ViG
      Yh33NkRfGu4daNgxWR6shmCCXldR4OA2BEW/uc8bBeM0ynn1kSdGljYhC56PGyTEzBV071G8
      TMC1V2j+0SNcbm/7zp6sncrREahhWKXaPfp0Xeyrzn0daZgjwG82chunJisURUhfEC4MeAIT
      MYh7DEEEPk5G4leT8YzqZHuG6EORCKhg4U5oCFS8MNdbyzllxCcn0bYzUEWqHABcfviA5MwM
      MsvLIYbj6ttjKF88F2hURCEgSboOtZvcQx7aEOYkL2vLPS6mMrqPjRNuRhrYq8upDOENheXH
      wF+V8Rz7CJ4iQgim795F7s1rJKeyjieP9WVqmuXp2dwUrlbzVPHItcOBWG7EAfyrZwC/l+J+
      MDIXMHPrzIB3gMmSomafJ4q/hvXPXMoDBp/pv6fuTYDvz1or7H++IsswPVzi7nYZ3v7tX6LX
      o0jMz6G8+wkzm4+wOJfAu9fb+OWf/Du8/83voEkp/PyP/21ge4QQTN1ZQ/n4BNP2xoMUQK/R
      QOX4GAtPnkQ2dpkt6IehVaCbtgHCuF791B/N0NHjgmN8u+yv21viBebQE43PvZ46yO/ubiPo
      Obp1e7/fmN3DbB9+WaQUwICKosLs9SIxqWEYMHodKLEsJqZS0DUd0/ceYno6BTU9hYRigMj+
      WxbxSM3MWPYcLOO9VSigns+PPUuUx1c5A/DSlSdY9j1IYgOwQ2PEkcqiZZdh9XDJw5ByE7BX
      cMwLUYSIyNPijpnwxj77zu5PlmRI9kw2mLEKqKoC6qq0FgZKPIFuvQwqx1C5yCO//QZ7P/6E
      6cW7aGsKtF49WnuJBBoXF9A7HcixGOY2N63758rEj1P0Dl0Y6yandL+1uVH7NO2XrirKQJkU
      VhwrapuEEKdynWmaTmoGP/4g6R7WSHSPzy0A2D24ZyQe7mfJr19g6Ha7+F1Pw+TGRuB4+LHc
      BI5+/WvMPXyI1Oys1aczB/dvGOLFCmHHRSkdzQt0Uw8gipstqB22Nlf0sIapROHeQlV0bZjy
      617jFX2CxuNXblLosRLNAIoCU9N8+xpoO9R2GwFtcONj96skEg7xWyDO++NHzfdP6XUBSDPk
      swNGUIHc0+44/drjgiRJIJAs96fgd15l4EslesGtYvDH3PALDkUN3nhdy+If/OJ2EUPzMych
      Vu6U9UwoLK8wgaKomKnVYLx+DWvfG4Cymcb+d0eSkOWWLI66eoX3irmfabdW89zphfdqUasB
      1iAgdvZ4Ymy1Qd2EMGykeJyqFZOO1mbQxClfzsAzbdhsV1HRXl3XobmkJ28cA/3Px2sbzzD9
      i+wYd3kTvxT3gRmBW7roRweGYeCfymUkbZ2c3dMoEAkJdqx8eIhuo4GFJ0+EVbR56e+oRg4D
      9DOTX/9jM4LdD3eYdAmmxwYViwrbFt+mWwVye1DCMp1IyjK1yD1u3rvktxcb+8s/Qy+CdDsC
      +HsEAEVRMDk5CcXOs2fMoWkaWq3WgK3Cj0Ok37Nju7kcEk+eDIzpRmwCAsysr8PQdRS2t6Ek
      EoOVItjCGnDMQJz/hR7PjXmBokpxfpGL30OOAkfikkGpGUblEcHLncn2LXAXxBWpTex3N9EN
      Mx63WzeVSkHlcmqYW5QxRKPR8AwceY2l3W7jcnISE2NcvOILahG1JMtYfPYM3UYDuVevkFle
      xgRXpoU3iIHwkp8/50YZgDfO/F4u7+Jk391tDTsGd94SL/nHJb2CbIMgo3eY/ry+qx4JZaZp
      otvtes4sbonPj3GnWET6xQvh+L3GNCxEKnB8YgLL336LWi6H3Js3mLW3nmVmMb/mwG8cb//u
      /0Wvo2PizhqudvYxvfHwZnOBeN2Un27dC78ZxmlE87oxv3qM//ewBBjkbWFEFlTyMUg/HQa6
      XbqEh6ZpqFarwt/c43GrapVqFY3lZd+I6jDEH8bT5253cnkZS8+eoXR4iHapdC1gQtgwAKD1
      utC7HUhyEjFVBiixiuPeNNyqjW/U1WN69oPo5t2qCP+X/80ttYeBSJ3xC5Kx31n/XmqVX39e
      57TbbUfPVxQFuq6j3W4PzVBX7TbirsJYQWOICtE7dwfznOOSBJimszukl7bAP18GWY0jnZ1G
      p1xGen4RpfOTzxsJvgk3qZd+7dW/29sT9UXyTCwiavfmE7x65NdvFEISSUlZlhGLxaAoVhGu
      Wq0Wuj13u3z7G4uLeLu3B+3xYxDbBhiV+EXP7frLYMymz+PW7UJSFGFqhNMuEdPA41/8V+h1
      NaQmM+g26tiIpwZVINM00e4MLzFGQZB+6gU/gvfysgT1GTQ+L6ntZgCvWWGc+nMsFkMmk0Ei
      kYCiKH1GbxSIno8kSXi+uAiyt9eXLTrqmL2uD0p0uDo4wKxXtJpd6kG6sWQK6ewkCCFIZCah
      xhSxDWAGpQ7eEIbVJf1ceF5GL9BviwT1HfTSwzChV9+j7I0Qi8WQSqUGjg/jSvbqX5IkfDc3
      B3N/X/h78/wcnbdv0by87Hsf7o+7n6iMZOg6qGlCEWyLBPTbAmE1gwEGkCQJ6VRqfD7dAPjp
      yexYmNmI1+3dx7wqpo1DkoXBTc2mkiQhFosJiT2oz6h2hyRJ+C6bhba76xzT2m1ob9/iRa+H
      P1xexrNaDdLLl6gfHDh1RN19Dut4AKzg2Cy/UcYY8EWzQYNUilEeVhiMqoaEHd9NMRk/a2ia
      5sQ2WGBO1/XQLtgwY1RVFc/Tabw6OIBJCFZbLdxdXHQ8XdPT05ienka318Phu3coxmKQVleF
      KQ1BsYgB6W2a0FotqILZbhSQfD7/RRN4/LwwwzAAz1BBwS6/6dLr3GHGF6akzDD3KkkSJiYm
      QAiBrutoNpsD5/gxwLBottuQACQFu8bzxr5pmrgoFnHa66E9O4vkwkLfwvcgFYX//ergAOnZ
      WSRceytHhbuPL74eYNzuND7w5fWSh9VBRxnXTfTD4hqKogzkIvF9jxtpF+GLPFlsJlpeWMAy
      gGazidyHDygBqMfjyNy/DyUeD/VcKKXo1mrexm8EDLhVv/QMwMNNkGFziVjekd/2RW5JPwxB
      hnW3evXth1HUvUQiAU0bXP32ueA1ww2sTbaJzzAMnJ6f48o00UgkQObmkBLsScyeWeXkBLF0
      GqmZ6LvJi8A/oy8+A/hBZCB76Y1BBMRclKPgJokryBngh06n07cIR+TPH2VcQc816rWyLOPu
      nTu4C8tbValWkTs5QU1VYczOImnbFezadrmMKcGO9ePAVz0DiCAKJokCXKK2hyn6NA4EueTc
      KpuXh8bv/kZJsfaCKJod1ZPGV8wIaotSilq9jrNKBRVFgZbNgtrp55MrK0Pfhxt9M8BN6afD
      IKyUdwe3orT/tdwrIE48E+H/q+5qetvGgegjLTu2grRogB66h/YQFOht7/v/D3vvZXfRLVos
      kCBwWqCIaruKpdmDNPKIJilKlJXkXRwjEs2PGc5whjPji/iaEjFOPJvn25RWSim8fPECL2ur
      0c/NBv9+/Yqt5SLeUEgaIIoMiTwFfA4l22W2Pu26HDOnhmu38/2/6/0uxJ4HuASrCZPgfRcL
      Q03ELiY6T1P8/uEDzj5/7j0WX38kM6rr62t6KnV6Abe6wMR/ivansgbJ3wrV0+XzISZdbjOG
      +IkI+7LAPEmshcdDYp5dalwfFZffeXh4wJ/fvoGMg7LSGqtXr1r3gvoYJoioCom05dYcitAF
      63ofaO/ap7Bw9PEDjIk+cRJ9iLrL/BsKoqooCdcgbu2YAw/ZsXO8+/UL282m3U8AX7IMu7dv
      cVaXRAqVOvysur29JaXGSXnOlhZub0ibcpJlsPfYGMMsGvPbfRYKeHz9n+ELo/QhhgHMc4I5
      Lzd3d/hEhPT9eyDAoSmhbYEpMYgteSq9iEOZqAvMqL78Pac8J/TVjcc0a8Zi6HqEnHNsUr7r
      zKaUwm+vX+OPy0ssPn7Edr3u1S+1Xq8bFagrYqizMaWaa7h8WA2FbeAnLWvawaisB1fVaaa1
      HEkpyB5ePgPxHMvcRM8RPqdnV7C+a9xEhLvv3/FPniO5usJscZyW8cgTLBlgaKC4bDyGAWy3
      OU+FruxtzAAAmvq/UxNcnufYbrfNd6munZ2dYWFZ4LEx1Psd2ja3PwYDcDtFUeDT7S3Wl5dY
      vXnTmrejQzYzANCfaG0DGsIA8qA7FXginW78Oodm3cOq4LVj4kN1+pA+yXbk/R6ZxpGIsFwu
      J3HsjeFgkxk/QtAlHYiq7G+2TUk+++P+Hn/f3wNXV61bpFYJwC/HWFv6MABRVZxNqyrt3WPc
      Y/GdfYqyFDkpgZm2E1ue500EVuw1hLEYaUzEnpGGmGd9DKCUaor6Jfp4UzKfBYAvNzf47/wc
      6bt3bhWIO8ifh+oiJcqSoLWy2oTNjsuETD67vVQxZirMLDg2mAF4nEppKNST3GIAZa0HVhQF
      8jxvJprv4SdJYjV1PjXiDoHL+9vXN8EINee6GKAUNc80jiW4NNlKbHc7/LVeY6M1HpQCaQ0s
      Fm0GkGCRy0QKsheFMzssxV2XSsMlirQx2KkIhRmgJKrTJ6KZ2FY20Xrs5qRyEIqr7bSOrOO5
      2Bf7JmzvOcDnrwj1OQxhAp+/Qa7LzFM6twtlWSLPc/dtUB681hr78pCC2+yQNClKyRFCxK4q
      i1PvlArVZPLk8i7D/ZFx2nLCXaGI7AfZbDbQWmM+nx9uNyqMnOH+dOhSYUPAtNDHp+FjrsSh
      ivaF1rpKIuCzr/LnQniKbcQtLUh9iXfqwy/D5gQjIzsdEbV2md1u1wTcSO+5ZFpzLEVRNCZL
      AhCbUblrTMDTVLWYCcbwUo8pQRNXSm0TJmHIhR5Dd59y0Uwv8OEfoj+oJnpfFige9kfeac4F
      CqBJ6Ms7v2na4/cUKusS1Vk3YkT4c4PN4z7VmjON2+ANiDHVnqrMaNwG9lR2Jx7Xfr8XB/6a
      kYlaG7WUfqZVgyUBmyQ5Ok3qsbvdDqvVqtb/D30oyrp800iM8NSsSEcWl0CfQnPIHeF2QlEU
      yLIMFxcX1vacDMAHYK10cwCkklCWdKS7u0SvTf8zn3usBbMxQJVGHYBqa+m8s9vymJopGBnW
      xFQKaN0xVqq+dlxihvGYoK/ZMaTNKc26MWqOVEuZ+NM09UsAZxwt2neLZnoGhXDnlos4Yhfl
      FNFPRNRyPLmsHnJh5N+yIAb/zZ98xURBgai0tlFJg8fxOPtgMtSQ913nRh/6MIG5ofKGlWUZ
      VquVM2M2UEeE+QLJqSSQPoj+kMIXUlceG75CcDHxAkq1QyZtk28jXLm45jmJ/QFSGrgWlQAQ
      lQAUZmocS0esvm0aCly2+a7f7tMHl+PNBdfGl2UZlsull/iJOirEcOOs4/bhyLGJXzKgOUk2
      a0wo5vO5czGlgSCva+iabn2p6/PzPF8sqVqMQ+2q7VRVg4BW3Y7GEEi1M1aSDHFime+GOs1C
      EdIGESFN006abRggRBwBh0G5COZU+ry5449pdQq9Ci6TQHHJIeB4ofl7kiTWPlYMUla+AHXo
      izx1DB3bkJJPLrAaYSK03Zh3Q+nRhxCmIyL8D6+0IcSxLfuXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Cars vs Non-Complaint Cars' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29SYwkaZqe99ji+77EvkdkZlXuXV3d09Oa5mFAgifyJIkQKAGkAAo88SJd
      dNPoLkBcLgSPOg0kUQIIbZAalGbEafXUnlm5RWRkLB6r7+7mZm5uuw6RlV1VaebhEZ7p1dVu
      D5DIiDTP1z9bXvv///s3wfM8j5CQKUX8oQMICfkhea8GUFX1fcqHhIzNezWA67rvUz7kD4D2
      6R6//n/+ku2947eOKZ0Whu3/DOndKvunzd99tl7h1//2L3j+qsKr50/RTBsA19RoKf3Xn/L4
      +vHXfFPnbzQaCO+zDaAoCtls9n3Jh/wBsP/Fv6Nb2OLVF79ltpDBklPk4y5OJMPZzmdkt35B
      0miQLC+hnFfou1E2FzJs77xAyG8Sd1Q+uHcXr/mKYzY4e/ZXrK8tE0nGqTY0FuIDfr2t87Pl
      FGokRlJwySZkNJI8/u1fhG2AkB8ah2dPnvInv/qIlibjdKqIiRTHxycUZ+a5ub7EabPP7Y0y
      dcVDVBv89ukeH937kM7xS3bPFRyiF1Keh4uA0mogRpPonTpiIsPm5g06zQY//8UfUa/XeHV4
      xscP7jCzsBSWACE/LN3aKWa8wEw2wc7TrzCkDIWYw0lL5/bGPHtnXQoxB11IIZtdNDfGSinO
      y8NT5lc2qFVesfHhA+Juj8+f7LG6dYOY00eMRjnYP+L2/fu8ePaccj7P6q0bVF69IhMXOWmb
      rBRjPw4DGIZBLBYLdUKdd64z8SqQbeicV6vohoU56NNotvE80Ps6QU40DOOtf3Ntk/PzczTd
      wDYH1BtNXM+j3WwweN0AGknHsalVz+lpOo5tUq83sB2HZr1Gf2COrIPrUK9V6fY0XMemXq9j
      2Q6ea6Nq+ug6eLQaNVodBc9zadRrGKZNt928uFZX0GnWq7S7PTzPoV6rYVgOhq7SUdQr6EC7
      WafZ7uJ5Hs1GHX1gUK9VqdYaV4qn225Sb7ZxPY9Oq4GmGwz6Ku1uz/d7g+JRlQ61+sX9Vjot
      BoaJqnTQdP/Pv6XzrXsl+/6P90jz+AQ7n2d7exvBMZibX0TTFL788im//Bu/HDmgQeecjhHj
      ZHubmOBQnltAVbrolsPxy13u3/1wJB1D7dLp6RyfnBOPihTKswz6fUzXo7K9zUcP748WkKly
      1tYYVE6YycSQMyV0w6R9XqGu2fzswd0Rz8zm7LSBZ/ap5zLEEhlkXeXV7j4rG1sjagBYnJ02
      8ewjzlIpMrkCstrl4KDC/OIyuWx6ZKXT8zMinkOrGseJ55iVdCKRCC9fHTA7Wx5Z5+z0nJjs
      oXTqqIbM0rzMSWUP2fOI3P+Y9Ig3//j0lFxc4kWng6GbbC6bHJyrOIbGRx89RLhMwOxx1u4z
      ODr5ARrBnkP1/Bw5GmdlaYHTkxOIppkrF64m47k0a1UkKcrq6jLnZ6fYYoxeq87i8spVlGg1
      67iixNrqCvXzMzTLw+y1ESNXK367rQauJ7Cwskq3cU7ttMJupUarXsd2R69p9rotdNdlaXmV
      fqdJq9tnaWmeo8o+zhUyy71ui4ELa6trKI3aRWnieJyenuBdIR5V6dLTbWaX1/C0Fs2uSjIm
      UZxZuPxh+xa6ptBWdXLlRVLigFqzhei69C0X8Qo1cVPXqLV75PNl8kmRtuogWH16PQ1nRI1O
      q4HnCpM3gByLIQsikiTSU1VkSURTWlRrNc7OGyPriHKUiPxaR+khyxLt4326Jui6f5XDV0eS
      icgysiTR6/UQJQlL76EaLpJ4hdsrSsQiFzqqeqETS5f5m3/6N7i5tY48spZALBYlIktoag9P
      EMF1UJQuciTO6CEJRF/rqGoPJIlIIkMmKhCJxhCucGqxaAw5EkFXe7iCiOB51BstVlbmRxcB
      orEYEVnGGmgMHA9RACkiE43IXKUpGo3FkGUZxx6gD2yQIqQSEeYWF0arQQiv75Us/64RbJrm
      lYIYBVVVSadHL2pDnVBn0jpvDON53js3wLvSDHVCnfel88YA7yLd9H1M0yQej4c6oc7vrU7Y
      Exwy1YQGCJlqQgOETDWhAUKmmtAAIVNNaICQqSY0QMhUExogZKoJDRAy1YQGCJlqQgOETDWh
      AUKmmivNCHMsg729ffKzi0ScPp2Bx8pckb39Q5bXt7CNPp5tkcwVrjD+PSTkh+NqUyIFicXF
      BV4dHhGRZNIxke3tNsubaxweVhBsBUdMcztfeDME9ccyLDbUmU6dKxlAkmU6rSaSJCHJESJR
      EUu1iMdiiHi0W01y8xdTG13XffNnXEKdUOd96VzJAAOtS1cbkMoUiHoD2n2HD7aW2H76jOXN
      W5SKWVzLxHQ8YrJ0YRRJGvsEQp1Q533pXMkA8VSOO3dyb35ffP33/QcPLn5Ijz95ISRkkoRZ
      oJCpJjRAyFQTGiBkqgkNEDLVhAYImWpCA4RMNaEBQqaa0AAhU01ogJCpJjRAyFQTGiBkqgkN
      EDLVhAYImWpCA4RMNVczgOcx0PtYtoNpDNC0Pp7noes6nufhOA6OY7/zjTZCQt4XV5oPYBka
      p2c1en0DydHJlebpNc9p6xaReBbJ1eirAz68d5fxpzGEhLx/rmSASCyJ4JjMzS/gaC1OTo6J
      p3PcvXODvd1DTiovWPjgjxHhdWngYNv+e/ZehVAn1HlfOlcygFI/5rStsZIc4FgWkhxhrpDk
      8aOvKc+vsHbrPoZWx3SKb6ZEyvL4WxGHOqHO+9K5knp2dpU/mV19/ds8G69/mlv8Zl/e0vUi
      DAn5gQizQCFTTWiAkKkmNEDIVBMaIGSqCQ0QMtWEBgiZakIDhEw1oQFCpprQACFTTWiAkKkm
      NEDIVBMaIGSqCQ0QMtWEBgiZakIDhEw1V5sSOVDZ3TtEjKWJOH16hsf6Yon943PmltbxLA1T
      11le3wy3SQ35UXAlA8ixFPOzJZq9AY4XZ6Eo8uq4yYMH99jfPaR2vM3cjY+RhHBKZKjz49C5
      2i6R3TqVmsLNjRX2X72ibQnkEjLnZ1VcKcL8ygZ6t4G7NPNmZ74fy9S4UGc6da5WAiTSlDIG
      mm5wY3MdzfQoZFPU63UWNhawLRPR83A9wlUhQn4UXHlViOWV5JvfY69/nJ2bA0CKxt5dZCEh
      EyDMAoVMNaEBQqaawCrQky9+gx3Lk88UWF9dmGRMISETI7AEaLU7PPvy/+Os3p5kPCEhEyWw
      BJidKdPpuywvz08ynpCQiRJYAhRnFrl/5wanx6eTjCckZKIEGuD4cJenz14yt7Q0yXhCQiaK
      rwFefPVbXrw6plqr0ekok44pJGRi+Brgw5/8MfPFFLJoofUHk44pJGRi+DaCPc9j9eZdXA8y
      ybB3N+QPF18D7D75jO2jBkurd7h9c9XvIyEhfxD4GmDjwwcIkR3++rd/iWbCr376waTjCgmZ
      CL4GONrbQXOi/Pt//z8lHh1/OGpIyO8r/iXAB/cnHUdIyA/ClV7vrm3w+KuvuPXwF5y8eoIj
      JlgsZ9k/OmV+ZRPPVDF1ncW1jXBKZMiPgisZQBAjlAsZbNfDdRws2+Cs3ubu/XvsvzqkdrLD
      3OZH4ZTIUOdHo3PlCr5tW1iWRXl+mXbtDMuxaTSbOKLE/PIafaWJx2w4JTLU+VHoXEndtga4
      chq91yEbF0mXF5kr5Tg9PefmxiqWaSDiYrseUSmsAoX8/nPlKZGbW1tvfs++/ntp+WK8kBSP
      v7PAQkImQTgjLGSqCQ0QMtWEBgiZakIDhEw1oQFCpprQACFTTWiAkKkmNEDIVBMaIGSqCQ0Q
      MtWEBgiZakIDhEw1oQFCpprQACFTzZUM4Hkux5V9TAdatVP2Dk+wTZ3tFy/oGzaK0qXTamC7
      3vuKNyTknXLFOcEWvU6T7OwqtZZKOi6yvbPP2tYGR5UKzqCNECvwYaGE53l4nofrumMHGeqE
      Ou9L50oGkCIxcpkk4CGKErIk4rgQiUYQgH5fIxUvv/nSb/6MS6gT6rwvnSsZwNRV6u0+mlAj
      m5To6h4f3Fzh5bNnrGx+QLmUx7NNTMcjJouIoogkjb9fZKgT6rwvnSsZIJpI8/CnP3vz+zdb
      Z9y7/+Dih1S4jmjIj4swCxQy1YQGCJlqQgOETDWhAUKmmtAAIVNNaICQqSY0QMhUExogZKoJ
      DRAy1YQGCJlqQgOETDWhAUKmmtAAIVNNaICQqebaBtD7Ku1OF9d1URQF1/OwbRvbMnHfwSSG
      kJBJcM0dyDx2d7YpzC5hdBv0HKi2ekhuH71v8uHdO+82ypCQ98S1t+CbnZ3l+PSYSDzN3bs3
      2ds95PRoh4Wbf4RIuE1qqPPj0LmeATyPfr+PIMoslDM8fvSEmcVV1hMPMPUWplMiJofbpIY6
      v/8611MXRDZufMDG619n5pde/1S4llxIyA9FmAUKmWpCA4RMNaEBQqaa0AAhU01ogJCpJjRA
      yFQTGiBkqgkNEDLVjN/NFhKIffQpxl/9U99jsT/6z6D805F0nPo29sv/y/eYfOtvQ3Te91jI
      5YQGeI94gy7u2SP/Y/3WyDpu4yXmX/9L32NicRMWQwNcl9AAPjjVp7itPd9j8uafTjia3z9c
      tY7x7/5b32Pyxq9g4VcTjcc5f4L+b/6J77Hoz/8RbP3dwP8bGsAH68X/ivXFf+d7LPUP/xeQ
      ihOO6N3geS64jv9BcfR1+D2zh/383/geE5LFiRsA18LT6r6HPKs/9L+ObQC1XWO3csb88gae
      qWLqOkvrm8iiMK50yDvGevI/Y/z6v/I9Fv+7/wxmfz7ReDxLx23s+B4T0nNA8r3HMLYBag2F
      ew/usb97SO14m7mtn4YPf8hIuO0D+n/+H/sei/7iH8O9f/DeYxjbAHEZqtUarigzv7JBX2ni
      eLNIwuRN4DR2cJuvfI/Ja38CgG5Y2I7/hmnpRBRhxLh//dkef/5vn/ge+8//3i+5sz4zks7/
      9tuX/E9/+dz32H/593/FjeXJVrfaPZ0n+/7Via3FAovlzETjsWyH3z478T02V0hxa6U0ss7A
      fHtSzNgGWFjboFqrc2NzBds0EXFxXbjK1k7m4/8er3v89gEpQuzf82/c+GFv/x+Yn/wr32PJ
      /+R/hNgi//xff8Jvnhz5fuZ/+K//Q6KR0QLvGxb1jn/90rQD6tl+OoNgHesKOv/7X+/yf37q
      b/7/4u/9kuXZ7Eg6B+cd/ps//43vsX/0d346sgEq1S7/95f7vsd+eXdl5AdXN+zAeP70o/WR
      df7i0SH/4l9/8ta/vzGAqqrX3pIymUyi9Xq/+wfDQgc0TePZQd33gYhHZT54HbylKHiK8raw
      FCGmKGiaxv/7uMLeqX/q8D/6m/eIyhJO5ibOrf/A9zOOJaPbGreXMiTlRd/PqGoPSRRwcrcD
      dVwD+p7GbEbmb/3EXycuOnS7XVypgB2gY0fnGWgaC/lIoE5EsC90IjPBOnKZgaaRlF02ZxO+
      n7GMPt2uhxubD9aRCgw0jYTkBsYzm5Hodrt4pogVoGNlP8DQNBTVRvG7p4CiKHS7Mp4dCdbJ
      3MDQNKSIHRjP1kL6Ih43EayTWsfQNIoJ0VdH8N7FPpQBKIpCNhv85vlm+0pRHN4hfZkOXMz7
      vGxHwVAn1Pk+Ex8KYekqxuuqmCAI33n4Lb1Hq1FnZ6/CZZvNO7ZJXzff/P7di+DRarU42tuh
      oxlDdVzboq//7jPf1vEck2arzfbzF1iXviccVPV3VZnv35RWq0Xt7Jhqo32JzkVpHKzTpLL3
      ku4l5zWKzsHuDr1vXcPr6HQ7bZr1KkdntTHjaXF+ckC91fv+f3sLTVX55m58X6fdatGsnXFa
      bYwUz8QN4HkuQY9SX2nw+bMDMFXsS2tjwzZRdjnYeYFum1TPO9fWccw+z548wjIGdAeXxQPe
      ENeeHx9Q62i06pc/KJ4XfPJ724/p2x71xuU9ycN0Xj37Et32aLS6l+sMOa/m+Sn7pw167eZY
      8Zwe7dHqDWjUqpfquEPiqZ0dc1zv0Gn6N+S/H8/EO8LkaAIvwHaRWJL79+8wl0/CJckYUZSJ
      RYOOChTnllhbX700HkGUiUX9L6ggRVjdus3q4uylOiASTwTvk5zJFVlYWUMaIckUj/vX5QHK
      C+usra2PEM9wnZnlrdF1EvHAY8l0hoWtJeLy5e/SYfFkciVWVtcZJQk3LJ5UOsvm8upIqfh4
      PDG5EqDbbnB0VOH47DyweiNF4hzvvWB37xD/l7KHonQ5PTri6PgUa8ibwFDbPHuxTVf1f3Ur
      isL5SYWj42PMgOJGECO0qkdsb29jBCRkFEWhUT2jUjmib1iB8YiuydOnz6g2/UskRVFo1s+p
      VCpoQ6olg16HZy+2UbTg82rUzqhUKvQHwfH0lRbPX2zT6/t/l6YotFp1KpUKiqoH6sSiIs+f
      POHo1L9k66sK7VaTSqVCp6cF6gi2zpNnz6m3/RvORl+j02lTqVSGllqxCDz5+iknVf8SSe0p
      tJuvz0vTJ2eAfr8f8FB/C8/BccE0g+u3pt7HvlRIQI5JmKqG4fh/1jL6mJdmGV1Ez0EbWMEF
      kmMOffDfIEng2Ax0/wdX8OyhD/7vZAQsQ8ewA66BYw198N/oiGAYBlZAn4ggeqhDHvw3X+eC
      IIAx8P+sKAj01OAH/833yTE8S2MQcC0lWURRLm8fOK6AKLgYekA8ePQ0/Vu/T4i52TLdrkK3
      00MI+NaB1sVBoq/2AtoAAuW5ObRuh57SJeDeAS6m5eHYfbpt1fcTpZl5dLVDr6dgB5QkrjnA
      Q0DvtlEDFijLFko4Rh9NVTCsYEepuonnWPR6/vFkckU8a0Bf6zEwgldDsywL0zToBaQYs4US
      jqlf6AxxuG2ZGAM98OFMpnPI2PT7Gv1B8AtJ6fURcQPPK57KEBVdtL5Gvx/ckOobNo5j0ev6
      l5ByNEEuEUFRNVQteHyPog0QPYdez98syUwOybPR+iq6bk6uDeAMNAaOQMJq8/Koxocrs9+p
      73mOiRuf4Y8/XqXRaBJcpbTpqQalYowXz/f46KNbfD8J1mp1+eD2PSxdQXOD64tKT6VUyLG9
      s8NP7t/j+31gysDlwUc/o9Ookw5sb0BX6VGaKfLy+TbZnz0kHv3uZVU6bTa2PkD0bNqK/4MC
      0FEUiuVZ9naeks3+nGQs8p3j7VaLD+9/jKn3GLjBAXUVhdLMLK9ePCH785+T+F48rVaL2w9/
      wUBTsMTg69Nqd8kVy1T2XpLPZsikvvtZU+0ws7rFmuzRbAVnt9rtDql8iePDV+TzWXLp747x
      6bRa3Lh5E89epaMGl4JKp000kaZ+ekyxmKeU/25qs99rs7xxg5jk0WoFJz86nQ6ZYpnK3s7k
      SgApkSUhWjjRDAvFt3sTHaPPSbWBgECzdk5AzQWQyWfj9HSP1dU53xM4PznGdi9KgEYjuNgs
      5LIofYvV5SUkH6Hj4woAWrvKkPtCqZin2eqxur6C7CPUrJ6hWzZ4DrUh6bmZYoFms8XS2gZR
      +e3c9unpMY7rYRs6zYC6MkC5mKfZbLO8sUnEJ57TkyNcD6yBSrsbXD2ZmynRbDaZX1ol/j0z
      AvSadTraAAGPajU46zI7O0Or2WRmYYWET+aiVj3FsFw816FWD74+xZlZ+t0W+fIcKZ+GcLdW
      ozcwwXOHxjMzU6LVbDG/vDrJEkAhkp3jg6Uyshx5q7UvJ/PMZVVebG9TXFglMqQEsLwYd+9u
      IMmyb938xo1N9nd3ECMJtjYXAmMyHbh79y6SJOOXNNhYWWZ7e5tkdpZCcIIHtW9x5+5dJElC
      8unUW9u6wf7+PmeuwNbNrUCdrja40BElJJ8H98bmBnu7LxGjCTY3gjNcSt/k7t27iEN0dl9u
      E4ml2FgPHmvU7KjcuXsXURSRfTqbiqs30A5esV2zWdvYDNZpdfnwzl1kyV/nxs2bvNp7hYvE
      1taGj8IF7WaTtZu3Scf81/qc37jB4f4eO5bLxo0bwTpdjdt37iJJ4gT7ATyPZr1GpVLB8qm7
      e66DFIkzMzNDRGRog1lpNzg8rPgObgKwbJdSeYZCLo1lBdene90Wh4eHgY1YF4GZmRlSMXlI
      iQS6plA5PAzMlliWRa5QolwqYlvBDVRDV6kcHgZmS2zHpVQuU8imsIa0Nwb9HoeHh3RV/7qy
      7XiUyzPkMsmh441sU6dyeBhY2jiWSTKTZ6ZcxguaZwDYtsFx5ZB6QAbMNC0KxRKlYh57yP1y
      bYuTkyPOAkpR2zJJ5wrMlEs4dvB1No0+R5VDmp3e5EoAMZYmFQU78IILxOMJHNdFCGolAyCR
      ySaxbTvQJJFoFE8QLx1mkc1ksG07cEOPaCyO5Lp43vBuiWwue6ET0JiW5AiJuIfreb5VpG/I
      ZbMYQ3TkSIy4IOF5HtKQPHcuk8Uacl6RaBTECx1xSOI9l8uhGTZOwBgxQZJIJBK4rovkU2X7
      hkIuR7tvEg/QkeQI8fjF0Jhh1ydTKNCtKzgB2Q9Rkkkk4riuhzwknnwuh2rYuI47uRJAwANE
      Brru2xMsiCKO3uQ3n37F9s7O0DeuIIBjDbACPhSNRXi1/Yivv/iK49qQ1Jkg4NgmdkA/QER0
      +PKT3/DV4+f0hyxTLwC4dmCJJEeiHFd2efL1U17t+49E/SYecBkY/g2OWDzOztef8uTpE07q
      Q3pwBQCHQUA6NBZP8OKr3/D102dUW8GN8m+8MQjIAkmSTOPsmEdfP2Fn138KKYAnCIgQmAKO
      RGMcHe7x5PHn7FXOguPhYviMHpDilOQIZ0cVnjx5wstX/iNRL4QEBDwGA2NyBnBtE8cTwDF9
      q0AAciTByuIckvx2g+tbSpimgyB4mAEPHAgUZ5bIZGJEh3S9mqaJJIARUC0RRZml1Q1i0vB+
      B8MwkWQRY0i6MJUtUcyniMWCGxOGYSBLMoNBcLqwPL9CMhYlOqTn1TRNZEnGMILz+LOL6yQi
      MhE5+PoMBgayLGMMiSeWTDFXLhCNDjmvwQBJljGMYJ1Mrkg+l3srg/ZdHQNJlob2E8XTWWZL
      OWKx4OyWMRhcnJcxmFwVqKu7/OT+bbrtFtGA0skyByxv3KLfqASMF/JoNhUe/vSjiz6DQKO4
      iEKcew/vcnzuf7GazSb3f/IzjH4PS/BPKTq2Rao4z0w2ETg2qdlscfv+A2xTp6cHG0XwRG7d
      vsvxsf8brtVscuvOA1zboNMLvsFSNMa9u7eptvzr961mkw/uPsC1DLpqcD1YiiW4d2eBZkAH
      h9ppsXLjNhIunU5waeM5Alu3PuSk4l+yaUqHhbVbyKI3VEcQPG7ffcDR8bnvcUvvkSgvcTMq
      0ekEpzgFT2Dr1h2OAuLptlus3byD4Np0FG1yJcDxcQVPEOjUTtEDXtxnJ0c8/vIzmppN0Ivp
      9PgY1wNNadFV/R8UtdNiZ+c5n335nLxPyvXiuy5SirraodPzf5ia9XOeP3nMzmmXbMALrn52
      ysBysc0+9Yb/DbYGGnuvdvj008+JpvzjadTOLjqDLIN6I6Abv9NgZ3ubLx6/IJvzH95br56i
      mw62ZVBv+g+YU9p1tl+84Ktnu2Qyad/PdBo1lL4Brs15QErR82wO9nb57NNPcGX/C9Rr12ir
      OngOZ1X/gW6m3mP35Us++ewLEpmc72cGvS61loIowOmpv0kc2+Bgb5dPP/kEMZby/Uy7cX7R
      KenaVGt1pD/7sz/7M99PvgMMw3hT5KdiEQ4qRySL88zk/Cc7x2QwSWL3Fcpz829Sk7/TEchm
      EhzsH+JGMqzMl3wHT0XjcVRFoVxMoZoRCtnEW/HkMin29w+wxQSri7O+UyET8RhK3yLhDYiV
      Foi/rk59W6dQyFE52EfRXTY3lhF9GqeSHGXQVymXy3S6GjOlgo9OnuPDA9qqwdbmum8jNxpP
      0ut2KOXTDByJXCb5tk4+x9HhAV3VYmtzzTeeWCKF0u1QyCaxiJF93cH1bZ10Lk/z7Ih6q8vm
      1g3fxqkgiHj2gFShTLfTZW62/JZOKpunXT2h2mizsblFxKdxKkVi6FqPmXIJpTegVMy9pRNL
      ZTCUBqfndZbXNohH3y79RVHGMvoUyjO0OwqzM6W3dHKFAufHhzTaKhubG5OrAmUKZTbiCaQA
      ZwJE4ylcs4ocS/jm5QESqRxbmzEcQR4yclAkkYii9U1Ki/5vplgyw42tdSxPDsyECHKEiOBi
      CxFiAdU2KRLnxq0baJo1NIORSiZRNY1Uxj/vLspRtm7eQtM0386rb0jEY/QHFjMl/zquFImz
      deMWuq4PjScRj6IbNrmAEayiJLO2uYWm6cSD6qxAMpWi3lVJJv3vqyBKrG5soWnaWz3b3yaV
      SKCqfVL5oJG3AgvLa2Q1jVQqeFRpKpWkq6okA0paQZTZ2LqJpmnEo/Jkh0P3e22icsp3mIOl
      dWgbMvfufngR6JC8o9nXMKQUsYh/+EeVY7Zu3X6tEyzkDDR6bjKw4XVyVuPO3buX6oBFp62S
      Svk/lKeVI+bXt5A879JJ951Om1TK/2E6Oqpw84M7eJfF47l0uh2SSf+S9uiowq0P712ug0en
      3SWV8tdpVI5Ira5Qmh//vFY3b+KNcn3anUCdauWIwuo6c1e4zhMzgK13ODzvkmj32bhx662G
      sGubvNzep13IXrxVtzYCSgGbV/sVIokk0fVNUvG33yrVkwqqdpHeW1heJ5/xf2O83DtAiqWI
      RTbIJt9+Ex6+2kZ9PVhs4+aHxH0bJh47z3ZxRZlmJ04p/3adWmnWaGkqElAozzM/47+Z4O72
      U2xPot5SmCm+Xcevnhy+iWdhZZ182v+8dnee4yATTWQo599+E54dH7zRWVrdJJvyLwUOdncx
      HJfTWpTF2bcnnw/ULpXnKgkgmSmwtuy/RGNl/yW66XB8Xmd5/u3VMtqN8zfxlGYXmS35twPq
      x4d01QFm5ZT11cW3+mb63RZnz1ViQCZfZnnBf2WOg91tDMfjrNaaYAngeaiqRiKW9z0sJ7N8
      9NFPSA+ZVPJaiF5PpZgIXjTp1p37gY3Eb9NTVfJDqmQPfvpHZLP+N+PbqGqPZDZNs6AAAAvL
      SURBVDZ4h8ylzZukctlLMw6qqhJPBX/frTsPRoun1yORCY7nw7sPR9LRtF5gYxKguLTKXC7L
      sKQ1gK6p2FJwtWV964OR4rHMPgPLI0hpdnWDlVz20oda01SE1+c1ucFw0QSFXArLsn3f7FIk
      PsLDDyBRningOhZeQP/sKA8/QLlcxnUdgvp5R7kp3+jgOYGdd5kRHv43Org4AUKjxlN6o+N/
      /CrnJUBgz2tyhIcfoFiaQRLACRgFMGo82UKJuCwGbnqdGuHhh4vrI+LhTLIn2B6ouFKCqGcM
      7VUdQQl94JFJyigBs71GpT8wyCVjdEeYsDGMnqZTKmbpDBmhOQpKT6NcKtLtXD5xfng8fcrF
      Ap3O6CtQ+9HpqpRnyihjxtPpdimVy6jKZfOzh6O0O2SKJXTt8okxw+gqPUqlEkq3PcHBcNEs
      SzMZiksbZEZ5bfjiYVsC6+tLRNMzzBeDi+fLsC2L9fUNpGSOxbJ/tWwUHNthfX0d24uysTp3
      fR3HZn19A9OGjY2VMeKx2VjfwHQENteWr63jOg5r6+uYhsXWVvBIz0t1XIeVtQ1s02Rj8/o6
      nutSWlol6tlj6biOw+raBrbtsLm5PjkDVM+OqVfP+fzTTwM7wkahWT+nXq/x+IvPaY1RArSb
      Neq1Gk+++oL6kDHxl9HrtqjW6+w8fUTl7PpvXE3pcF6r8+rFE/aPL18ZYVg857U6u8+/5vD0
      8qVBgtA1hdPzKod722y/qlxbx+irnJ6dUznY5fnuwbV1bGvA6ckpJ0eHPHqyfW0dXVM4O69y
      sLvNzv7xBIdCtJvoXoyf/fzjwJz6KKhKl2bP4OHHH5NLDpmmdQlar0u93ef+Rx9TCMimjMKg
      r1KtNdi685M3HTjXwdA1qtUaax/cp1y8folk6BrVWp2N2w8pF66vY5sDarUacys3mZ25/vqk
      jmVQq9UoL2ww55NJGhXPtanXaqSLM2zNX7+ktQ2daq3G/NpNZsulyRlgbnEFFxHHtgPXBRqF
      0sw8meLFOveXLZ41jEJ5jmTOAc8NHDY8Culcka3YRepz2Ho1l5HM5NnaSoytk8oW2Nq8qBq6
      Q9bhuYxYIs3GxubFyNvgydeXEomn3omOKEVZ29hAEATsoNb9CESTGTa/iced4LpARl8hWV6j
      kB4l0xOMaRtAitm567/dAIzXEy9mZ6//NgFeryonMjs32mrQQWivhwqPHc/rEalj66g6DrA4
      O8qaSMHofRXLheWF8eIxtD6m6bCwsjjWQ6v1+3jA3OvrMzED9No19qoq5VySzZsfXrsaZOpd
      tnf3WWiWWd3cJB2/XjXINvo833nFwkKT5fUt346wURCxePT1DgvNeWYXV3w7nkZBFly+fPyU
      hYUm5bmlwM6gy5A8h6+ePGNhocnMwjIzhdFSwt8nGhP44tPHdJYWyJXmWJq7XvUlGonw4ssv
      UNpNMoUyKwvXM1QsEeXVZ1/S7nVIpXJsri1dtnaafzyyyKMvHtFqNsmX/eeUvxdu3n5AMiox
      0LQxqi4Cy+u3KOUTuLbOwLx+kbq4ssFMMYfnWIFr0YxCeW6JpfkSIg5awCJTo1CcWWBlcQ5R
      BE27fD2eIEpziyzNzyCKHlrA4lmjkM7PsLW+iCiKb3ppr0MyW+Tm5gqiKKKNoSPH09y7s4WA
      iKYGT+K5jGxhho3VRURRQFP7k10bVBTFoVPwRtcREATxWm+A78cjCMKlyzCOpCO+g3iEdxgP
      4kjLDA5DEEQEURhb512dF4Lw+t6PJ3QRjwjChJdH/+arrnoC70sHzxthQNgIOq9j+r3R+UM9
      r/egM7ESwBkoHFVbY7sXbA4Pjt+BDhwcHgwfdjoSHocHB2PHAnBwMGQe61V03sl5wdHhwdC5
      2aNycnQQOA32KjTPjlGHrJo3Kt8+r8lVgaQo9aNdnj57PsKanMMQUFrnfP30GeoIa2AOQ+s0
      ePLk6Uhr7Q/DGfR49PUT6u3xuuhFu8+Xj59QbV6+ZPlQTJWvHn1NrTXe0Iyo5PLVV484Prt+
      hxpATBZ4/NVXVE6v38EHEI1Hef71I3YPjsZKpUcEm0ePHnNSbUzOAJ6lo2oaUUlCH8sALlq3
      RzIRpTtk7uwoDNQW0UQSZcyxQIYzICpG6XbGM0Df9IhHBZT2eGNvdNMlHpfoDlmucBRUTSca
      TdDvjTk2SdWRoxEMbTxD9pUethDBM8cbA6bqJpGoRF/pTs4AYiROKh6lqegkxkq+SmRzKaq1
      FumAceyjksnmqdfqgRM+RiWdytBs1Emmrz82CSCTTtGq14mnx9uJMZ1O0arVSF6yvdClOpk0
      aqeBHB/vvNLpDH2lDfL1e9wBEpkMrqFhBW0wMXI8aXrtFnJ8ghNiAGLJHDFJHmmTiGGI0Ti5
      mDR0yt8oeHKCQlYaOgVxFGwLSjN5ogEz1EbWsS1K5VmikWuPFgQuBsQVS+WxdVzboVAqEI1e
      f8gJgOva5ItlYsE7mowo5JDL54kOWVpmNBmbQrFMNBqZXAlQO9ln4EWQDYXutdPlHu3mOV3V
      IhUXaA5Z1OkyOq0GLUUjHZNojDGMWe12qDY65PMpagGbMoyC1utyWmuSy+do1PxXPRgpHqXD
      WaNNLp+nfn59nUG/x+FJlVwuP9K2TkEYusbB0Sm5XI524/o6tjVgf/+QZDZHt3X966xrPSqn
      VfL5HM16bXIGSBfmibl9dKIkxxgMF4tnyKZlml2DfC548aNLdWJxCpkUja5GPmBpkFGIRGPM
      lnKcnbcoXrP3FiASibJQLnJ2ViVfLI8RT5S5UoGzsyqF8vV1JDnK8sIsZ2dnZArXH8QmyTIr
      i/Ocn52Rzl1/UJ0oSiyuLNOpnZNIX79qJ0ciLM3PcHZ2TrZQnFwVKCY5xIuLbC6Vr7SJ9ncR
      SKZiIKZ4+HAD8fpCJFJpXEHi4cM7Y+nEEgkGlsfDhw8v3e51GNF4At20eTCmTiyeZGA5Y8cT
      icbo9Y2LeIau1TocORKjp+nce/AQeYx4RCmCoWps3b5PeozhxJFoHE03uf/wIZIw4dWhG9Uz
      9g/Gzwl3mjX29w/Qx8wJK+0G+/v7aGOmUweawv7+Pp3e9YcwABj9Hgf7+7S716/afTuedsCC
      X6PimDoH+/vUR9hJcqiONeDwYH+kLWKH4bk2R5UDTkbYknUYltHncH+fRnuSWaBYimRUwB1j
      SOwFF6tDO2MMif2GTCaD4zhDtlsdVSf9bnSy2dc6Y8mQzWTfSTzZ7MX1GWdYNUA+m8V+Bzqp
      XA4cZ6zh4nCxerb9Wmdyq0OLEWbKZSxjMFYnBkB5ZgbJtQI3wBtdZxZZcDDGLJKKpTKJiIg2
      uP5gOIBCsUQqLqP2x+vfKJZKJGMS6hiD8wDyhRLpdHKsQWwAmUKRbCpFf4xBbACJdJZCLo3e
      Hy+eXLFIOhlH6090MJxwsYOKazIYsydYkiSkiIA+5oMiihKyJA1djXkkHUlCjsnoY4zi/CYe
      KRLD6I/3oAiihByNYfTH65gTRBFJGr469Eg6gogkSUNXh76KjmmMed8FEUmOYOj9yTWCz06O
      0AwbIZ4mdm3bedROT+mofTxXZmaMjrD6+Qkd5WJo9tyQpfYuo9Os02h18FyPwsz1sy5Ku0Gj
      2cb1XPLF609C6ba+icelUPZfqGoUNKVDtd7AdT3yheA1hi5DV7uc1+q4rkeucP0skGX0OT07
      x3ZcMrnrZ9s0pU210XxzXhMrAcqz80i42K4wZAfIyymUy8QjIqZtI48hlC+WiUclTNP2XbB1
      VNK5AtlknIFhEvHZt2pUUpkcuUyCwcBEHro/wiXxZPPkUhfxyGN0zCVSaUr5zJu1/a9LLJGm
      XMhhGgMk6fo6ciTObLmEZRqI4vXvVzyVoZjLYBgDJHmCHWGf/uYv6PRNIpIw1lzerz//hLOm
      QkSWx2oMPX/0Gce1DpGIHLgF0Cgc7jxh++CUaDSCO4bO8d4Lnr6sEI1G8MaJ5+Uznu8djx1P
      4+SAz7/eudhuaozGa6d2xKdfPUOKjKcz6DX5q99+DuJ4lZb68R5fPn2JHIniuS7/PxR24TzR
      ceFeAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
