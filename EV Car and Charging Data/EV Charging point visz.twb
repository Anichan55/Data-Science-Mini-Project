<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='EV Output' inline='true' name='federated.1e30sd21c51y5514aetrf1vw5xtl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EV Output' name='textscan.13ccuaa1ba6w3t18qao8i1rd8smk'>
            <connection class='textscan' directory='D:/Data Science TB2/DSMP' filename='EV Output.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.13ccuaa1ba6w3t18qao8i1rd8smk' name='EV Output.csv' table='[EV Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='site_name' ordinal='1' />
            <column datatype='string' name='postcode' ordinal='2' />
            <column datatype='integer' name='show_on_map' ordinal='3' />
            <column datatype='integer' name='in_service' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.13ccuaa1ba6w3t18qao8i1rd8smk' name='EV Output.csv' table='[EV Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='site_name' ordinal='1' />
            <column datatype='string' name='postcode' ordinal='2' />
            <column datatype='integer' name='show_on_map' ordinal='3' />
            <column datatype='integer' name='in_service' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>site_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[site_name]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>site_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postcode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[postcode]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>postcode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_on_map</remote-name>
            <remote-type>20</remote-type>
            <local-name>[show_on_map]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>show_on_map</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>in_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[in_service]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>in_service</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Postcode - Split 1 (group)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[postcode - Split 1]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;BS1, BS10, BS11 and 11 more&quot;'>
            <value>&quot;BS1&quot;</value>
            <value>&quot;BS10&quot;</value>
            <value>&quot;BS11&quot;</value>
            <value>&quot;BS14&quot;</value>
            <value>&quot;BS16&quot;</value>
            <value>&quot;BS3&quot;</value>
            <value>&quot;BS32&quot;</value>
            <value>&quot;BS34&quot;</value>
            <value>&quot;BS4&quot;</value>
            <value>&quot;BS48&quot;</value>
            <value>&quot;BS5&quot;</value>
            <value>&quot;BS6&quot;</value>
            <value>&quot;BS7&quot;</value>
            <value>&quot;BS8&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='EV Output.csv' datatype='table' name='[__tableau_internal_object_id__].[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]' role='measure' type='quantitative' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='In Service' datatype='integer' name='[in_service]' role='measure' type='quantitative' />
      <column caption='Postcode - Split 1' datatype='string' name='[postcode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1e30sd21c51y5514aetrf1vw5xtl].[postcode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [postcode], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Postcode - Split 2' datatype='string' name='[postcode - Split 2]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1e30sd21c51y5514aetrf1vw5xtl].[postcode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [postcode], &quot; &quot;, 2 ) )' />
      </column>
      <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Show On Map' datatype='integer' name='[show_on_map]' role='measure' type='quantitative' />
      <column caption='Site Name' datatype='string' name='[site_name]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Postcode - Split 1 (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BS1, BS10, BS11 and 11 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='EV Output.csv' id='EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4'>
            <properties context=''>
              <relation connection='textscan.13ccuaa1ba6w3t18qao8i1rd8smk' name='EV Output.csv' table='[EV Output#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='site_name' ordinal='1' />
                  <column datatype='string' name='postcode' ordinal='2' />
                  <column datatype='integer' name='show_on_map' ordinal='3' />
                  <column datatype='integer' name='in_service' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='EV Output' name='federated.1e30sd21c51y5514aetrf1vw5xtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1e30sd21c51y5514aetrf1vw5xtl'>
            <column datatype='string' name='[Postcode - Split 1 (group)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[postcode - Split 1]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;BS1, BS10, BS11 and 11 more&quot;'>
                  <value>&quot;BS1&quot;</value>
                  <value>&quot;BS10&quot;</value>
                  <value>&quot;BS11&quot;</value>
                  <value>&quot;BS14&quot;</value>
                  <value>&quot;BS16&quot;</value>
                  <value>&quot;BS3&quot;</value>
                  <value>&quot;BS32&quot;</value>
                  <value>&quot;BS34&quot;</value>
                  <value>&quot;BS4&quot;</value>
                  <value>&quot;BS48&quot;</value>
                  <value>&quot;BS5&quot;</value>
                  <value>&quot;BS6&quot;</value>
                  <value>&quot;BS7&quot;</value>
                  <value>&quot;BS8&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='In Service' datatype='integer' name='[in_service]' role='measure' type='quantitative' />
            <column-instance column='[postcode - Split 1]' derivation='None' name='[none:postcode - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='Postcode - Split 1' datatype='string' name='[postcode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1e30sd21c51y5514aetrf1vw5xtl].[postcode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [postcode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[in_service]' derivation='Sum' name='[sum:in_service:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[Postcode - Split 1 (group)]'>
            <groupfilter function='member' level='[Postcode - Split 1 (group)]' member='&quot;BS1, BS10, BS11 and 11 more&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1e30sd21c51y5514aetrf1vw5xtl].[Postcode - Split 1 (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1e30sd21c51y5514aetrf1vw5xtl].[Longitude (generated)]' field-type='quantitative' max='-247128.29958335933' min='-320662.30470376718' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1e30sd21c51y5514aetrf1vw5xtl].[Latitude (generated)]' field-type='quantitative' max='6725472.5390561605' min='6682463.2123001777' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Area Code Boundaries' value='true' />
            <format attr='enabled' id='Area Code Labels' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' />
              <text column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode - Split 1:nk]' />
              <text column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' />
              <lod column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode - Split 1:nk]' />
              <lod column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' />
              <geometry column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Postcode - Split 1:&#9;</run>
                <run bold='true' fontsize='8'><![CDATA[<[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode - Split 1:nk]>]]></run>
                <run>Ã&#10;</run>
                <run fontcolor='#787878'>In Service:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e30sd21c51y5514aetrf1vw5xtl].[Latitude (generated)]</rows>
        <cols>[federated.1e30sd21c51y5514aetrf1vw5xtl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A1AF9E5F-3E13-4EEE-8D2F-C98BA9E6750E}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e30sd21c51y5514aetrf1vw5xtl].[Postcode - Split 1 (group)]</field>
            <field>[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:id:ok]</field>
            <field>[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode - Split 1:nk]</field>
            <field>[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEA7FFBD-03B8-427A-A259-82BF1D9FE4C3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      oDHTxcea+UgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
