<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='EV Output' inline='true' name='federated.1e30sd21c51y5514aetrf1vw5xtl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EV Output' name='textscan.13ccuaa1ba6w3t18qao8i1rd8smk'>
            <connection class='textscan' directory='D:/Data Science TB2/DSMP' filename='EV Output.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.13ccuaa1ba6w3t18qao8i1rd8smk' name='EV Output.csv' table='[EV Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='site_name' ordinal='1' />
            <column datatype='string' name='postcode' ordinal='2' />
            <column datatype='integer' name='show_on_map' ordinal='3' />
            <column datatype='integer' name='in_service' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.13ccuaa1ba6w3t18qao8i1rd8smk' name='EV Output.csv' table='[EV Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='site_name' ordinal='1' />
            <column datatype='string' name='postcode' ordinal='2' />
            <column datatype='integer' name='show_on_map' ordinal='3' />
            <column datatype='integer' name='in_service' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>site_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[site_name]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>site_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postcode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[postcode]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>postcode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_on_map</remote-name>
            <remote-type>20</remote-type>
            <local-name>[show_on_map]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>show_on_map</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>in_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[in_service]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>in_service</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Postcode - Split 1 (group)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[postcode - Split 1]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;BS1, BS10, BS11 and 11 more&quot;'>
            <value>&quot;BS1&quot;</value>
            <value>&quot;BS10&quot;</value>
            <value>&quot;BS11&quot;</value>
            <value>&quot;BS14&quot;</value>
            <value>&quot;BS16&quot;</value>
            <value>&quot;BS3&quot;</value>
            <value>&quot;BS32&quot;</value>
            <value>&quot;BS34&quot;</value>
            <value>&quot;BS4&quot;</value>
            <value>&quot;BS48&quot;</value>
            <value>&quot;BS5&quot;</value>
            <value>&quot;BS6&quot;</value>
            <value>&quot;BS7&quot;</value>
            <value>&quot;BS8&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='EV Output.csv' datatype='table' name='[__tableau_internal_object_id__].[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]' role='measure' type='quantitative' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='In Service' datatype='integer' name='[in_service]' role='measure' type='quantitative' />
      <column caption='Postcode - Split 1' datatype='string' name='[postcode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1e30sd21c51y5514aetrf1vw5xtl].[postcode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [postcode], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Postcode - Split 2' datatype='string' name='[postcode - Split 2]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1e30sd21c51y5514aetrf1vw5xtl].[postcode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [postcode], &quot; &quot;, 2 ) )' />
      </column>
      <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Show On Map' datatype='integer' name='[show_on_map]' role='measure' type='quantitative' />
      <column caption='Site Name' datatype='string' name='[site_name]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Postcode - Split 1 (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BS1, BS10, BS11 and 11 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='EV Output.csv' id='EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4'>
            <properties context=''>
              <relation connection='textscan.13ccuaa1ba6w3t18qao8i1rd8smk' name='EV Output.csv' table='[EV Output#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='site_name' ordinal='1' />
                  <column datatype='string' name='postcode' ordinal='2' />
                  <column datatype='integer' name='show_on_map' ordinal='3' />
                  <column datatype='integer' name='in_service' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>EV Charging Points in Bristol Area</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EV Output' name='federated.1e30sd21c51y5514aetrf1vw5xtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1e30sd21c51y5514aetrf1vw5xtl'>
            <column datatype='string' name='[Postcode - Split 1 (group)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[postcode - Split 1]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;BS1, BS10, BS11 and 11 more&quot;'>
                  <value>&quot;BS1&quot;</value>
                  <value>&quot;BS10&quot;</value>
                  <value>&quot;BS11&quot;</value>
                  <value>&quot;BS14&quot;</value>
                  <value>&quot;BS16&quot;</value>
                  <value>&quot;BS3&quot;</value>
                  <value>&quot;BS32&quot;</value>
                  <value>&quot;BS34&quot;</value>
                  <value>&quot;BS4&quot;</value>
                  <value>&quot;BS48&quot;</value>
                  <value>&quot;BS5&quot;</value>
                  <value>&quot;BS6&quot;</value>
                  <value>&quot;BS7&quot;</value>
                  <value>&quot;BS8&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='In Service' datatype='integer' name='[in_service]' role='measure' type='quantitative' />
            <column-instance column='[postcode - Split 1]' derivation='None' name='[none:postcode - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='Postcode - Split 1' datatype='string' name='[postcode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1e30sd21c51y5514aetrf1vw5xtl].[postcode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [postcode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[in_service]' derivation='Sum' name='[sum:in_service:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[Postcode - Split 1 (group)]'>
            <groupfilter function='member' level='[Postcode - Split 1 (group)]' member='&quot;BS1, BS10, BS11 and 11 more&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1e30sd21c51y5514aetrf1vw5xtl].[Postcode - Split 1 (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1e30sd21c51y5514aetrf1vw5xtl].[Longitude (generated)]' field-type='quantitative' max='-247128.29958335933' min='-320662.30470376718' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1e30sd21c51y5514aetrf1vw5xtl].[Latitude (generated)]' field-type='quantitative' max='6725472.5390561605' min='6682463.2123001777' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Area Code Boundaries' value='true' />
            <format attr='enabled' id='Area Code Labels' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' />
              <text column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode - Split 1:nk]' />
              <text column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' />
              <lod column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode - Split 1:nk]' />
              <lod column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' />
              <geometry column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Postcode - Split 1:&#9;</run>
                <run bold='true' fontsize='8'><![CDATA[<[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode - Split 1:nk]>]]></run>
                <run>Ã&#10;</run>
                <run fontcolor='#787878'>In Service:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e30sd21c51y5514aetrf1vw5xtl].[Latitude (generated)]</rows>
        <cols>[federated.1e30sd21c51y5514aetrf1vw5xtl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A1AF9E5F-3E13-4EEE-8D2F-C98BA9E6750E}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e30sd21c51y5514aetrf1vw5xtl].[Postcode - Split 1 (group)]</field>
            <field>[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:id:ok]</field>
            <field>[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode - Split 1:nk]</field>
            <field>[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEA7FFBD-03B8-427A-A259-82BF1D9FE4C3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      uz0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
