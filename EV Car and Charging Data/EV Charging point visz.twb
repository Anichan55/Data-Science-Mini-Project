<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='EV Output' inline='true' name='federated.1e30sd21c51y5514aetrf1vw5xtl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EV Output' name='textscan.13ccuaa1ba6w3t18qao8i1rd8smk'>
            <connection class='textscan' directory='D:/Data Science TB2/DSMP' filename='EV Output.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.13ccuaa1ba6w3t18qao8i1rd8smk' name='EV Output.csv' table='[EV Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='site_name' ordinal='1' />
            <column datatype='string' name='postcode' ordinal='2' />
            <column datatype='integer' name='show_on_map' ordinal='3' />
            <column datatype='integer' name='in_service' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.13ccuaa1ba6w3t18qao8i1rd8smk' name='EV Output.csv' table='[EV Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='site_name' ordinal='1' />
            <column datatype='string' name='postcode' ordinal='2' />
            <column datatype='integer' name='show_on_map' ordinal='3' />
            <column datatype='integer' name='in_service' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>site_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[site_name]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>site_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postcode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[postcode]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>postcode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_on_map</remote-name>
            <remote-type>20</remote-type>
            <local-name>[show_on_map]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>show_on_map</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>in_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[in_service]</local-name>
            <parent-name>[EV Output.csv]</parent-name>
            <remote-alias>in_service</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Postcode - Split 1 (group)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[postcode - Split 1]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;BS1, BS10, BS11 and 11 more&quot;'>
            <value>&quot;BS1&quot;</value>
            <value>&quot;BS10&quot;</value>
            <value>&quot;BS11&quot;</value>
            <value>&quot;BS14&quot;</value>
            <value>&quot;BS16&quot;</value>
            <value>&quot;BS3&quot;</value>
            <value>&quot;BS32&quot;</value>
            <value>&quot;BS34&quot;</value>
            <value>&quot;BS4&quot;</value>
            <value>&quot;BS48&quot;</value>
            <value>&quot;BS5&quot;</value>
            <value>&quot;BS6&quot;</value>
            <value>&quot;BS7&quot;</value>
            <value>&quot;BS8&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='EV Output.csv' datatype='table' name='[__tableau_internal_object_id__].[EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4]' role='measure' type='quantitative' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='In Service' datatype='integer' name='[in_service]' role='measure' type='quantitative' />
      <column caption='Postcode - Split 1' datatype='string' name='[postcode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1e30sd21c51y5514aetrf1vw5xtl].[postcode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [postcode], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Postcode - Split 2' datatype='string' name='[postcode - Split 2]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1e30sd21c51y5514aetrf1vw5xtl].[postcode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [postcode], &quot; &quot;, 2 ) )' />
      </column>
      <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Show On Map' datatype='integer' name='[show_on_map]' role='measure' type='quantitative' />
      <column caption='Site Name' datatype='string' name='[site_name]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Postcode - Split 1 (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BS1, BS10, BS11 and 11 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='EV Output.csv' id='EV Output.csv_7931845CDBC24A059CEC01FE472C5AE4'>
            <properties context=''>
              <relation connection='textscan.13ccuaa1ba6w3t18qao8i1rd8smk' name='EV Output.csv' table='[EV Output#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='site_name' ordinal='1' />
                  <column datatype='string' name='postcode' ordinal='2' />
                  <column datatype='integer' name='show_on_map' ordinal='3' />
                  <column datatype='integer' name='in_service' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>EV Charging Points in Bristol Area</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontsize='10'>Map based on Longitude (generated) and Latitude (generated).  Color shows sum of In Service.  </run>
            <run>Ã&#10;</run>
            <run fontname='Tableau Bold' fontsize='10'>Data Scouce:</run>
            <run fontsize='12'>Ã </run>
            <run fontcolor='#000000' fontsize='10'>Opendata.bristol.gov.uk. 2022.Â </run>
            <run fontcolor='#000000' fontsize='10' italic='true'>Electric Vehicle Charging Points</run>
            <run fontcolor='#000000' fontsize='10'>. [online] Available at: &lt;</run>
            <run auto-url='true' fontcolor='#0000ff' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://opendata.bristol.gov.uk/explore/dataset/ev_charging_points/information/&amp;quot;' underline='true'>https://opendata.bristol.gov.uk/explore/dataset/ev_charging_points/information/</run>
            <run auto-url='true' fontcolor='#0000ff' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;&amp;gt;.&amp;quot;' underline='true'>&gt;.</run>
            <run>Ã&#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EV Output' name='federated.1e30sd21c51y5514aetrf1vw5xtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1e30sd21c51y5514aetrf1vw5xtl'>
            <column datatype='string' name='[Postcode - Split 1 (group)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[postcode - Split 1]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;BS1, BS10, BS11 and 11 more&quot;'>
                  <value>&quot;BS1&quot;</value>
                  <value>&quot;BS10&quot;</value>
                  <value>&quot;BS11&quot;</value>
                  <value>&quot;BS14&quot;</value>
                  <value>&quot;BS16&quot;</value>
                  <value>&quot;BS3&quot;</value>
                  <value>&quot;BS32&quot;</value>
                  <value>&quot;BS34&quot;</value>
                  <value>&quot;BS4&quot;</value>
                  <value>&quot;BS48&quot;</value>
                  <value>&quot;BS5&quot;</value>
                  <value>&quot;BS6&quot;</value>
                  <value>&quot;BS7&quot;</value>
                  <value>&quot;BS8&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='In Service' datatype='integer' name='[in_service]' role='measure' type='quantitative' />
            <column-instance column='[postcode - Split 1]' derivation='None' name='[none:postcode - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='Postcode - Split 1' datatype='string' name='[postcode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1e30sd21c51y5514aetrf1vw5xtl].[postcode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [postcode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[in_service]' derivation='Sum' name='[sum:in_service:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[Postcode - Split 1 (group)]'>
            <groupfilter function='member' level='[Postcode - Split 1 (group)]' member='&quot;BS1, BS10, BS11 and 11 more&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1e30sd21c51y5514aetrf1vw5xtl].[Postcode - Split 1 (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1e30sd21c51y5514aetrf1vw5xtl].[Longitude (generated)]' field-type='quantitative' max='-247128.29958335933' min='-320662.30470376718' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1e30sd21c51y5514aetrf1vw5xtl].[Latitude (generated)]' field-type='quantitative' max='6725472.5390561605' min='6682463.2123001777' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Area Code Boundaries' value='true' />
            <format attr='enabled' id='Area Code Labels' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' />
              <text column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode - Split 1:nk]' />
              <text column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' />
              <lod column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode - Split 1:nk]' />
              <lod column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' />
              <geometry column='[federated.1e30sd21c51y5514aetrf1vw5xtl].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Postcode - Split 1:&#9;</run>
                <run bold='true' fontsize='8'><![CDATA[<[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode - Split 1:nk]>]]></run>
                <run>Ã&#10;</run>
                <run fontcolor='#787878'>In Service:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e30sd21c51y5514aetrf1vw5xtl].[Latitude (generated)]</rows>
        <cols>[federated.1e30sd21c51y5514aetrf1vw5xtl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A1AF9E5F-3E13-4EEE-8D2F-C98BA9E6750E}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1e30sd21c51y5514aetrf1vw5xtl].[sum:in_service:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e30sd21c51y5514aetrf1vw5xtl].[Postcode - Split 1 (group)]</field>
            <field>[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:id:ok]</field>
            <field>[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode - Split 1:nk]</field>
            <field>[federated.1e30sd21c51y5514aetrf1vw5xtl].[none:postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEA7FFBD-03B8-427A-A259-82BF1D9FE4C3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      /wK64Xe+PNAIngAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
