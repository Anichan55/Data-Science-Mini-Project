<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (envfigurescleaned)' inline='true' name='federated.07vs13s0k4th221bc7j6n0pp0lc8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='envfigurescleaned' name='excel-direct.05ldehe1gfq0qk0zw606e1yjj6n1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lydst/OneDrive - University of Bristol/TB2/Data Science Mini Project/envfigurescleaned.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.05ldehe1gfq0qk0zw606e1yjj6n1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA31:no:A1:AA31:0' header='yes' outcome='6'>
            <column datatype='string' date-parse-format='yyyy' name='Year' ordinal='0' />
            <column datatype='real' name='CO Cars and taxis (Thousand tonnes)' ordinal='1' />
            <column datatype='real' name='CO LGVs (vans) (Thousand tonnes)' ordinal='2' />
            <column datatype='real' name='CO HGVs (Thousand tonnes)' ordinal='3' />
            <column datatype='real' name='CO Buses and coaches (Thousand tonnes)' ordinal='4' />
            <column datatype='real' name='CO Motorcycles &amp; mopeds (Thousand tonnes)' ordinal='5' />
            <column datatype='real' name='CO Rail (Thousand tonnes)' ordinal='6' />
            <column datatype='real' name='CO Aviation LTO (Thousand tonnes)' ordinal='7' />
            <column datatype='real' name='CO Domestic shipping (Thousand tonnes)' ordinal='8' />
            <column datatype='real' name='CO Other (Thousand tonnes)' ordinal='9' />
            <column datatype='real' name='CO Military Aircraft (Thousand tonnes)' ordinal='10' />
            <column datatype='real' name='CO Military Shipping (Thousand tonnes)' ordinal='11' />
            <column datatype='real' name='CO Transport total (Thousand tonnes)' ordinal='12' />
            <column datatype='real' name='CO National total reported to the UNECE' ordinal='13' />
            <column datatype='real' name='NOx Cars and taxis (Thousand tonnes)' ordinal='14' />
            <column datatype='real' name='NOx LGVs (vans) (Thousand tonnes)' ordinal='15' />
            <column datatype='real' name='NOx HGVs (Thousand tonnes)' ordinal='16' />
            <column datatype='real' name='NOx Buses and coaches (Thousand tonnes)' ordinal='17' />
            <column datatype='real' name='NOx Motorcycles &amp; mopeds (Thousand tonnes)' ordinal='18' />
            <column datatype='real' name='NOx Rail (Thousand tonnes)' ordinal='19' />
            <column datatype='real' name='NOx Aviation LTO (Thousand tonnes)' ordinal='20' />
            <column datatype='real' name='NOx Domestic shipping (Thousand tonnes)' ordinal='21' />
            <column datatype='real' name='NOx Other (Thousand tonnes)' ordinal='22' />
            <column datatype='real' name='NOx Military Aircraft (Thousand tonnes)' ordinal='23' />
            <column datatype='real' name='NOx Military Shipping (Thousand tonnes)' ordinal='24' />
            <column datatype='real' name='NOx Transport total (Thousand tonnes)' ordinal='25' />
            <column datatype='real' name='NOx National total reported to the UNECE' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.05ldehe1gfq0qk0zw606e1yjj6n1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA31:no:A1:AA31:0' header='yes' outcome='6'>
            <column datatype='string' date-parse-format='yyyy' name='Year' ordinal='0' />
            <column datatype='real' name='CO Cars and taxis (Thousand tonnes)' ordinal='1' />
            <column datatype='real' name='CO LGVs (vans) (Thousand tonnes)' ordinal='2' />
            <column datatype='real' name='CO HGVs (Thousand tonnes)' ordinal='3' />
            <column datatype='real' name='CO Buses and coaches (Thousand tonnes)' ordinal='4' />
            <column datatype='real' name='CO Motorcycles &amp; mopeds (Thousand tonnes)' ordinal='5' />
            <column datatype='real' name='CO Rail (Thousand tonnes)' ordinal='6' />
            <column datatype='real' name='CO Aviation LTO (Thousand tonnes)' ordinal='7' />
            <column datatype='real' name='CO Domestic shipping (Thousand tonnes)' ordinal='8' />
            <column datatype='real' name='CO Other (Thousand tonnes)' ordinal='9' />
            <column datatype='real' name='CO Military Aircraft (Thousand tonnes)' ordinal='10' />
            <column datatype='real' name='CO Military Shipping (Thousand tonnes)' ordinal='11' />
            <column datatype='real' name='CO Transport total (Thousand tonnes)' ordinal='12' />
            <column datatype='real' name='CO National total reported to the UNECE' ordinal='13' />
            <column datatype='real' name='NOx Cars and taxis (Thousand tonnes)' ordinal='14' />
            <column datatype='real' name='NOx LGVs (vans) (Thousand tonnes)' ordinal='15' />
            <column datatype='real' name='NOx HGVs (Thousand tonnes)' ordinal='16' />
            <column datatype='real' name='NOx Buses and coaches (Thousand tonnes)' ordinal='17' />
            <column datatype='real' name='NOx Motorcycles &amp; mopeds (Thousand tonnes)' ordinal='18' />
            <column datatype='real' name='NOx Rail (Thousand tonnes)' ordinal='19' />
            <column datatype='real' name='NOx Aviation LTO (Thousand tonnes)' ordinal='20' />
            <column datatype='real' name='NOx Domestic shipping (Thousand tonnes)' ordinal='21' />
            <column datatype='real' name='NOx Other (Thousand tonnes)' ordinal='22' />
            <column datatype='real' name='NOx Military Aircraft (Thousand tonnes)' ordinal='23' />
            <column datatype='real' name='NOx Military Shipping (Thousand tonnes)' ordinal='24' />
            <column datatype='real' name='NOx Transport total (Thousand tonnes)' ordinal='25' />
            <column datatype='real' name='NOx National total reported to the UNECE' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Cars and taxis (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Cars and taxis (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Cars and taxis (Thousand tonnes)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO LGVs (vans) (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO LGVs (vans) (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO LGVs (vans) (Thousand tonnes)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO HGVs (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO HGVs (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO HGVs (Thousand tonnes)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Buses and coaches (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Buses and coaches (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Buses and coaches (Thousand tonnes)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Motorcycles &amp; mopeds (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Motorcycles &amp; mopeds (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Motorcycles &amp; mopeds (Thousand tonnes)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Rail (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Rail (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Rail (Thousand tonnes)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Aviation LTO (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Aviation LTO (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Aviation LTO (Thousand tonnes)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Domestic shipping (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Domestic shipping (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Domestic shipping (Thousand tonnes)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Other (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Other (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Other (Thousand tonnes)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Military Aircraft (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Military Aircraft (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Military Aircraft (Thousand tonnes)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Military Shipping (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Military Shipping (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Military Shipping (Thousand tonnes)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Transport total (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Transport total (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Transport total (Thousand tonnes)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO National total reported to the UNECE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO National total reported to the UNECE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO National total reported to the UNECE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Cars and taxis (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Cars and taxis (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Cars and taxis (Thousand tonnes)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx LGVs (vans) (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx LGVs (vans) (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx LGVs (vans) (Thousand tonnes)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx HGVs (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx HGVs (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx HGVs (Thousand tonnes)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Buses and coaches (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Buses and coaches (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Buses and coaches (Thousand tonnes)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Motorcycles &amp; mopeds (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Motorcycles &amp; mopeds (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Motorcycles &amp; mopeds (Thousand tonnes)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Rail (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Rail (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Rail (Thousand tonnes)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Aviation LTO (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Aviation LTO (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Aviation LTO (Thousand tonnes)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Domestic shipping (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Domestic shipping (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Domestic shipping (Thousand tonnes)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Other (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Other (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Other (Thousand tonnes)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Military Aircraft (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Military Aircraft (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Military Aircraft (Thousand tonnes)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Military Shipping (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Military Shipping (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Military Shipping (Thousand tonnes)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Transport total (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Transport total (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Transport total (Thousand tonnes)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx National total reported to the UNECE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx National total reported to the UNECE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx National total reported to the UNECE</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AA31:no:A1:AA31:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Aviation LTO (Thousand tonnes):qk]&quot;' value='Aviation LTO (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Buses and coaches (Thousand tonnes):qk]&quot;' value='Buses and coaches (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Cars and taxis (Thousand tonnes):qk]&quot;' value='Cars and taxis (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Domestic shipping (Thousand tonnes):qk]&quot;' value='Domestic shipping (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO HGVs (Thousand tonnes):qk]&quot;' value='HGVs (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO LGVs (vans) (Thousand tonnes):qk]&quot;' value='LGVs (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Aircraft (Thousand tonnes):qk]&quot;' value='Military - Aircraft (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Shipping (Thousand tonnes):qk]&quot;' value='Military - Shipping (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;' value='Motorcycles &amp; mopeds (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Other (Thousand tonnes):qk]&quot;' value='Other (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Rail (Thousand tonnes):qk]&quot;' value='Rail (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Aviation LTO (Thousand tonnes):qk]&quot;' value='Aviation LTO' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Buses and coaches (Thousand tonnes):qk]&quot;' value='Buses and coaches' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Cars and taxis (Thousand tonnes):qk]&quot;' value='Cars and taxis' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Domestic shipping (Thousand tonnes):qk]&quot;' value='Domestic shipping' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx HGVs (Thousand tonnes):qk]&quot;' value='HGVs' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx LGVs (vans) (Thousand tonnes):qk]&quot;' value='LGVs' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Military Aircraft (Thousand tonnes):qk]&quot;' value='Military - Aircraft' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Military Shipping (Thousand tonnes):qk]&quot;' value='Military - Shipping' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;' value='Motorcycles &amp; mopeds' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Other (Thousand tonnes):qk]&quot;' value='Other' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Rail (Thousand tonnes):qk]&quot;' value='Rail' />
        </aliases>
      </column>
      <column datatype='real' name='[CO Aviation LTO (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Buses and coaches (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Cars and taxis (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Domestic shipping (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO HGVs (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO LGVs (vans) (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Military Aircraft (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Military Shipping (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Motorcycles &amp; mopeds (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Other (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Rail (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Aviation LTO (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Buses and coaches (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Cars and taxis (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Domestic shipping (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx HGVs (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx LGVs (vans) (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Military Aircraft (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Military Shipping (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Motorcycles &amp; mopeds (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Other (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Rail (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Year]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_AECDB691AD684A008C021BF2959DE720]' role='measure' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
      <column-instance column='[CO Aviation LTO (Thousand tonnes)]' derivation='Sum' name='[sum:CO Aviation LTO (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Buses and coaches (Thousand tonnes)]' derivation='Sum' name='[sum:CO Buses and coaches (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Cars and taxis (Thousand tonnes)]' derivation='Sum' name='[sum:CO Cars and taxis (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Domestic shipping (Thousand tonnes)]' derivation='Sum' name='[sum:CO Domestic shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO HGVs (Thousand tonnes)]' derivation='Sum' name='[sum:CO HGVs (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO LGVs (vans) (Thousand tonnes)]' derivation='Sum' name='[sum:CO LGVs (vans) (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Military Aircraft (Thousand tonnes)]' derivation='Sum' name='[sum:CO Military Aircraft (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Military Shipping (Thousand tonnes)]' derivation='Sum' name='[sum:CO Military Shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Motorcycles &amp; mopeds (Thousand tonnes)]' derivation='Sum' name='[sum:CO Motorcycles &amp; mopeds (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Other (Thousand tonnes)]' derivation='Sum' name='[sum:CO Other (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Rail (Thousand tonnes)]' derivation='Sum' name='[sum:CO Rail (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Aviation LTO (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Aviation LTO (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Buses and coaches (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Buses and coaches (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Cars and taxis (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Cars and taxis (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Domestic shipping (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Domestic shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx HGVs (Thousand tonnes)]' derivation='Sum' name='[sum:NOx HGVs (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx LGVs (vans) (Thousand tonnes)]' derivation='Sum' name='[sum:NOx LGVs (vans) (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Military Aircraft (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Military Aircraft (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Military Shipping (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Military Shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Motorcycles &amp; mopeds (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Motorcycles &amp; mopeds (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Other (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Other (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Rail (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Rail (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Aviation LTO (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO HGVs (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Domestic shipping (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Aircraft (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Other (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Cars and taxis (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO LGVs (vans) (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Buses and coaches (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Rail (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Shipping (Thousand tonnes):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Year:nk]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1998&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2018&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1990&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2010&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;1993&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1994&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2014&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2002&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1999&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2019&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1995&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2015&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2008&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1991&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2011&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2006&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1996&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2016&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2003&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2004&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2007&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2009&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2000&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1997&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2017&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1992&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2012&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2005&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2001&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2013&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_AECDB691AD684A008C021BF2959DE720'>
            <properties context=''>
              <relation connection='excel-direct.05ldehe1gfq0qk0zw606e1yjj6n1' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:AA31:no:A1:AA31:0' header='yes' outcome='6'>
                  <column datatype='string' date-parse-format='yyyy' name='Year' ordinal='0' />
                  <column datatype='real' name='CO Cars and taxis (Thousand tonnes)' ordinal='1' />
                  <column datatype='real' name='CO LGVs (vans) (Thousand tonnes)' ordinal='2' />
                  <column datatype='real' name='CO HGVs (Thousand tonnes)' ordinal='3' />
                  <column datatype='real' name='CO Buses and coaches (Thousand tonnes)' ordinal='4' />
                  <column datatype='real' name='CO Motorcycles &amp; mopeds (Thousand tonnes)' ordinal='5' />
                  <column datatype='real' name='CO Rail (Thousand tonnes)' ordinal='6' />
                  <column datatype='real' name='CO Aviation LTO (Thousand tonnes)' ordinal='7' />
                  <column datatype='real' name='CO Domestic shipping (Thousand tonnes)' ordinal='8' />
                  <column datatype='real' name='CO Other (Thousand tonnes)' ordinal='9' />
                  <column datatype='real' name='CO Military Aircraft (Thousand tonnes)' ordinal='10' />
                  <column datatype='real' name='CO Military Shipping (Thousand tonnes)' ordinal='11' />
                  <column datatype='real' name='CO Transport total (Thousand tonnes)' ordinal='12' />
                  <column datatype='real' name='CO National total reported to the UNECE' ordinal='13' />
                  <column datatype='real' name='NOx Cars and taxis (Thousand tonnes)' ordinal='14' />
                  <column datatype='real' name='NOx LGVs (vans) (Thousand tonnes)' ordinal='15' />
                  <column datatype='real' name='NOx HGVs (Thousand tonnes)' ordinal='16' />
                  <column datatype='real' name='NOx Buses and coaches (Thousand tonnes)' ordinal='17' />
                  <column datatype='real' name='NOx Motorcycles &amp; mopeds (Thousand tonnes)' ordinal='18' />
                  <column datatype='real' name='NOx Rail (Thousand tonnes)' ordinal='19' />
                  <column datatype='real' name='NOx Aviation LTO (Thousand tonnes)' ordinal='20' />
                  <column datatype='real' name='NOx Domestic shipping (Thousand tonnes)' ordinal='21' />
                  <column datatype='real' name='NOx Other (Thousand tonnes)' ordinal='22' />
                  <column datatype='real' name='NOx Military Aircraft (Thousand tonnes)' ordinal='23' />
                  <column datatype='real' name='NOx Military Shipping (Thousand tonnes)' ordinal='24' />
                  <column datatype='real' name='NOx Transport total (Thousand tonnes)' ordinal='25' />
                  <column datatype='real' name='NOx National total reported to the UNECE' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Carbon Monoxide (CO) Transport Emissions in the UK by Transport Mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (envfigurescleaned)' name='federated.07vs13s0k4th221bc7j6n0pp0lc8' />
          </datasources>
          <datasource-dependencies datasource='federated.07vs13s0k4th221bc7j6n0pp0lc8'>
            <column datatype='real' name='[CO Aviation LTO (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Buses and coaches (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Cars and taxis (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Domestic shipping (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO HGVs (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO LGVs (vans) (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Military Aircraft (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Military Shipping (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Motorcycles &amp; mopeds (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Other (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Rail (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO Aviation LTO (Thousand tonnes)]' derivation='Sum' name='[sum:CO Aviation LTO (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Buses and coaches (Thousand tonnes)]' derivation='Sum' name='[sum:CO Buses and coaches (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Cars and taxis (Thousand tonnes)]' derivation='Sum' name='[sum:CO Cars and taxis (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Domestic shipping (Thousand tonnes)]' derivation='Sum' name='[sum:CO Domestic shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO HGVs (Thousand tonnes)]' derivation='Sum' name='[sum:CO HGVs (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO LGVs (vans) (Thousand tonnes)]' derivation='Sum' name='[sum:CO LGVs (vans) (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Military Aircraft (Thousand tonnes)]' derivation='Sum' name='[sum:CO Military Aircraft (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Military Shipping (Thousand tonnes)]' derivation='Sum' name='[sum:CO Military Shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Motorcycles &amp; mopeds (Thousand tonnes)]' derivation='Sum' name='[sum:CO Motorcycles &amp; mopeds (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Other (Thousand tonnes)]' derivation='Sum' name='[sum:CO Other (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Rail (Thousand tonnes)]' derivation='Sum' name='[sum:CO Rail (Thousand tonnes):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Aviation LTO (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Buses and coaches (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Cars and taxis (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Domestic shipping (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO HGVs (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO LGVs (vans) (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Aircraft (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Shipping (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Other (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Rail (Thousand tonnes):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Aviation LTO (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Buses and coaches (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Cars and taxis (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Domestic shipping (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO HGVs (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO LGVs (vans) (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Aircraft (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Shipping (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Other (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Rail (Thousand tonnes):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]'>
            <groupfilter function='member' level='[none:Year:nk]' member='&quot;2019&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]</column>
            <column>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]' scope='rows' value='Emissions (thousand tonnes)' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]' value='Year' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='left' />
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#86bcb6' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]</rows>
        <cols>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8CC64C4D-32F9-459F-B13A-B383DB9A9BC6}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Nitrogen Oxides (NO</run>
            <run fontcolor='#000000' fontname='arial,sans-serif' fontsize='11'>ₓ</run>
            <run fontcolor='#000000'>) Transport Emissions in the UK by Transport Mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (envfigurescleaned)' name='federated.07vs13s0k4th221bc7j6n0pp0lc8' />
          </datasources>
          <datasource-dependencies datasource='federated.07vs13s0k4th221bc7j6n0pp0lc8'>
            <column datatype='real' name='[NOx Aviation LTO (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Buses and coaches (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Cars and taxis (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Domestic shipping (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx HGVs (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx LGVs (vans) (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Military Aircraft (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Military Shipping (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Motorcycles &amp; mopeds (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Other (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Rail (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[NOx Aviation LTO (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Aviation LTO (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Buses and coaches (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Buses and coaches (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Cars and taxis (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Cars and taxis (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Domestic shipping (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Domestic shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx HGVs (Thousand tonnes)]' derivation='Sum' name='[sum:NOx HGVs (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx LGVs (vans) (Thousand tonnes)]' derivation='Sum' name='[sum:NOx LGVs (vans) (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Military Aircraft (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Military Aircraft (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Military Shipping (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Military Shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Motorcycles &amp; mopeds (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Motorcycles &amp; mopeds (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Other (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Other (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Rail (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Rail (Thousand tonnes):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Aviation LTO (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Buses and coaches (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Cars and taxis (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Domestic shipping (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx HGVs (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx LGVs (vans) (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Military Aircraft (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Military Shipping (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Other (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Rail (Thousand tonnes):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Aviation LTO (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Buses and coaches (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Cars and taxis (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Domestic shipping (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx HGVs (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx LGVs (vans) (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Military Aircraft (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Military Shipping (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Other (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Rail (Thousand tonnes):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]'>
            <groupfilter function='member' level='[none:Year:nk]' member='&quot;2019&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]</column>
            <column>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]' scope='rows' value='Emissions (thousand tonnes)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]</rows>
        <cols>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9E702939-D530-446F-8AE1-8DC74507FF87}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='35'>
            <card mode='slider' param='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E678372-46FE-4F00-92D9-70CE026A444E}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card mode='slider' param='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]</field>
            <field>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C39F29B-CBA7-40BD-80A9-F90F1423D82B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      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
      5QIi49y4NQnA9Fgvt/qnmBm8wfkrbQwNDdI7PM78QCtdEyuAS+/NFmaW7fTWDFh//Md//Mfp
      LiJZonMT3IlbBJZWKKooord3gMLCAsb6+zFCPuaXLbKZ4b133qHnzjw5oThnf/gaXWMT5BVv
      wYksUpifxfUP3uHKjX5ySitYGe3gctM1OvvGKKmqIsNnEJ68TSSvkoIA5BWXE1gJU7xnP/VF
      0NGzxCMnjrK1poT+zkEqaytTlrLx+VEiBTt5oMzHzLxDvrHEtJtBxsoEA7M20bFOzp5rJOwv
      oDgjxsV336Z9eIGamlI6L77NxWu3yCmvIifoY3l2hPfeeofuO/OUV5Yw2NnKtaYrdE/E2FZV
      SNfVc3xw5RoLRhE7tpbgOnEG2xt573Ibgbxipnuu8P6lNoJFFYSiE5w9+w49dxaoqChlfqSD
      s+9dJOzLIjw1THf7DfpnXbZV5tN59RwXrt0it7SC8J12zr5/mSUrj4rC5N8lGJ4cZdzM5ZGD
      e6mqKMadv8Prb7xN5/A8NVsqmRjsoae9nWUzQPfVD7h+a5TiiipCfpO52528+fY5hhegtjKH
      9sbLXG1pZioWoizf4vqF97h8rRt/UTk1Jbn0X7/E6+9+wPiKj9LAMmffeY+h6Rhl+UEG7swS
      MiPcnl7GHwtj5hYw0nqO9y+3kllaS14o2cM5NjMzMfYcPUxtSQ5dvcOUZbucffMteiejVFXm
      0Xn5Ao0t15maX6LzWjOL/nwKg3GunHuHtsFZqqrLuXXlLOebbhLM8HPu7Bt09oyTW1mKvRwn
      vyCTnubzXGjuJK+iluygSX/red69dB0rrwJm+2lt76Z3eJKyynIWZxfJyc2k/fLbXLrahptV
      Tm58gvONjbTe7CevtBwrtoCbkctkbzvXrl+lfWCerVvLGbpxkXcvtDAX9VNeVrA+vsXGFxgY
      XaEgx8/s9DhRgkzemeHwyUcpL8ynqCCP3MIgXe1jVFX46e1foqYqRON7Z7kxMEFpVQ3BNIxW
      rYtzlyxT0+NkZZdRlrlA/4yDNXuHO2Gb4fExAvYSt8cXcAHTMBkd7GRsOYejDz3EmReeoyrX
      ZHRsjIVbzSyWHuTMiR10NncyNTtN9Z7j7N0aZGr2C9ausKPErAz8AJaFz3ZY+wWNn821Y3S0
      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
      PEoBICLiUf8/H1fV1ylVi98AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
