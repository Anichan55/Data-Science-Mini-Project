<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (envfigurescleaned)' inline='true' name='federated.07vs13s0k4th221bc7j6n0pp0lc8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='envfigurescleaned' name='excel-direct.05ldehe1gfq0qk0zw606e1yjj6n1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lydst/OneDrive - University of Bristol/TB2/Data Science Mini Project/envfigurescleaned.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.05ldehe1gfq0qk0zw606e1yjj6n1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA31:no:A1:AA31:0' header='yes' outcome='6'>
            <column datatype='string' date-parse-format='yyyy' name='Year' ordinal='0' />
            <column datatype='real' name='CO Cars and taxis (Thousand tonnes)' ordinal='1' />
            <column datatype='real' name='CO LGVs (vans) (Thousand tonnes)' ordinal='2' />
            <column datatype='real' name='CO HGVs (Thousand tonnes)' ordinal='3' />
            <column datatype='real' name='CO Buses and coaches (Thousand tonnes)' ordinal='4' />
            <column datatype='real' name='CO Motorcycles &amp; mopeds (Thousand tonnes)' ordinal='5' />
            <column datatype='real' name='CO Rail (Thousand tonnes)' ordinal='6' />
            <column datatype='real' name='CO Aviation LTO (Thousand tonnes)' ordinal='7' />
            <column datatype='real' name='CO Domestic shipping (Thousand tonnes)' ordinal='8' />
            <column datatype='real' name='CO Other (Thousand tonnes)' ordinal='9' />
            <column datatype='real' name='CO Military Aircraft (Thousand tonnes)' ordinal='10' />
            <column datatype='real' name='CO Military Shipping (Thousand tonnes)' ordinal='11' />
            <column datatype='real' name='CO Transport total (Thousand tonnes)' ordinal='12' />
            <column datatype='real' name='CO National total reported to the UNECE' ordinal='13' />
            <column datatype='real' name='NOx Cars and taxis (Thousand tonnes)' ordinal='14' />
            <column datatype='real' name='NOx LGVs (vans) (Thousand tonnes)' ordinal='15' />
            <column datatype='real' name='NOx HGVs (Thousand tonnes)' ordinal='16' />
            <column datatype='real' name='NOx Buses and coaches (Thousand tonnes)' ordinal='17' />
            <column datatype='real' name='NOx Motorcycles &amp; mopeds (Thousand tonnes)' ordinal='18' />
            <column datatype='real' name='NOx Rail (Thousand tonnes)' ordinal='19' />
            <column datatype='real' name='NOx Aviation LTO (Thousand tonnes)' ordinal='20' />
            <column datatype='real' name='NOx Domestic shipping (Thousand tonnes)' ordinal='21' />
            <column datatype='real' name='NOx Other (Thousand tonnes)' ordinal='22' />
            <column datatype='real' name='NOx Military Aircraft (Thousand tonnes)' ordinal='23' />
            <column datatype='real' name='NOx Military Shipping (Thousand tonnes)' ordinal='24' />
            <column datatype='real' name='NOx Transport total (Thousand tonnes)' ordinal='25' />
            <column datatype='real' name='NOx National total reported to the UNECE' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.05ldehe1gfq0qk0zw606e1yjj6n1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA31:no:A1:AA31:0' header='yes' outcome='6'>
            <column datatype='string' date-parse-format='yyyy' name='Year' ordinal='0' />
            <column datatype='real' name='CO Cars and taxis (Thousand tonnes)' ordinal='1' />
            <column datatype='real' name='CO LGVs (vans) (Thousand tonnes)' ordinal='2' />
            <column datatype='real' name='CO HGVs (Thousand tonnes)' ordinal='3' />
            <column datatype='real' name='CO Buses and coaches (Thousand tonnes)' ordinal='4' />
            <column datatype='real' name='CO Motorcycles &amp; mopeds (Thousand tonnes)' ordinal='5' />
            <column datatype='real' name='CO Rail (Thousand tonnes)' ordinal='6' />
            <column datatype='real' name='CO Aviation LTO (Thousand tonnes)' ordinal='7' />
            <column datatype='real' name='CO Domestic shipping (Thousand tonnes)' ordinal='8' />
            <column datatype='real' name='CO Other (Thousand tonnes)' ordinal='9' />
            <column datatype='real' name='CO Military Aircraft (Thousand tonnes)' ordinal='10' />
            <column datatype='real' name='CO Military Shipping (Thousand tonnes)' ordinal='11' />
            <column datatype='real' name='CO Transport total (Thousand tonnes)' ordinal='12' />
            <column datatype='real' name='CO National total reported to the UNECE' ordinal='13' />
            <column datatype='real' name='NOx Cars and taxis (Thousand tonnes)' ordinal='14' />
            <column datatype='real' name='NOx LGVs (vans) (Thousand tonnes)' ordinal='15' />
            <column datatype='real' name='NOx HGVs (Thousand tonnes)' ordinal='16' />
            <column datatype='real' name='NOx Buses and coaches (Thousand tonnes)' ordinal='17' />
            <column datatype='real' name='NOx Motorcycles &amp; mopeds (Thousand tonnes)' ordinal='18' />
            <column datatype='real' name='NOx Rail (Thousand tonnes)' ordinal='19' />
            <column datatype='real' name='NOx Aviation LTO (Thousand tonnes)' ordinal='20' />
            <column datatype='real' name='NOx Domestic shipping (Thousand tonnes)' ordinal='21' />
            <column datatype='real' name='NOx Other (Thousand tonnes)' ordinal='22' />
            <column datatype='real' name='NOx Military Aircraft (Thousand tonnes)' ordinal='23' />
            <column datatype='real' name='NOx Military Shipping (Thousand tonnes)' ordinal='24' />
            <column datatype='real' name='NOx Transport total (Thousand tonnes)' ordinal='25' />
            <column datatype='real' name='NOx National total reported to the UNECE' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Cars and taxis (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Cars and taxis (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Cars and taxis (Thousand tonnes)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO LGVs (vans) (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO LGVs (vans) (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO LGVs (vans) (Thousand tonnes)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO HGVs (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO HGVs (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO HGVs (Thousand tonnes)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Buses and coaches (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Buses and coaches (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Buses and coaches (Thousand tonnes)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Motorcycles &amp; mopeds (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Motorcycles &amp; mopeds (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Motorcycles &amp; mopeds (Thousand tonnes)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Rail (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Rail (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Rail (Thousand tonnes)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Aviation LTO (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Aviation LTO (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Aviation LTO (Thousand tonnes)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Domestic shipping (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Domestic shipping (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Domestic shipping (Thousand tonnes)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Other (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Other (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Other (Thousand tonnes)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Military Aircraft (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Military Aircraft (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Military Aircraft (Thousand tonnes)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Military Shipping (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Military Shipping (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Military Shipping (Thousand tonnes)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO Transport total (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO Transport total (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO Transport total (Thousand tonnes)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO National total reported to the UNECE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO National total reported to the UNECE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO National total reported to the UNECE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Cars and taxis (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Cars and taxis (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Cars and taxis (Thousand tonnes)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx LGVs (vans) (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx LGVs (vans) (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx LGVs (vans) (Thousand tonnes)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx HGVs (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx HGVs (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx HGVs (Thousand tonnes)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Buses and coaches (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Buses and coaches (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Buses and coaches (Thousand tonnes)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Motorcycles &amp; mopeds (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Motorcycles &amp; mopeds (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Motorcycles &amp; mopeds (Thousand tonnes)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Rail (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Rail (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Rail (Thousand tonnes)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Aviation LTO (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Aviation LTO (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Aviation LTO (Thousand tonnes)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Domestic shipping (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Domestic shipping (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Domestic shipping (Thousand tonnes)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Other (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Other (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Other (Thousand tonnes)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Military Aircraft (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Military Aircraft (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Military Aircraft (Thousand tonnes)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Military Shipping (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Military Shipping (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Military Shipping (Thousand tonnes)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx Transport total (Thousand tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx Transport total (Thousand tonnes)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx Transport total (Thousand tonnes)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOx National total reported to the UNECE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOx National total reported to the UNECE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NOx National total reported to the UNECE</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AA31:no:A1:AA31:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Aviation LTO (Thousand tonnes):qk]&quot;' value='Aviation LTO (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Buses and coaches (Thousand tonnes):qk]&quot;' value='Buses and coaches (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Cars and taxis (Thousand tonnes):qk]&quot;' value='Cars and taxis (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Domestic shipping (Thousand tonnes):qk]&quot;' value='Domestic shipping (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO HGVs (Thousand tonnes):qk]&quot;' value='HGVs (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO LGVs (vans) (Thousand tonnes):qk]&quot;' value='LGVs (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Aircraft (Thousand tonnes):qk]&quot;' value='Military - Aircraft (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Shipping (Thousand tonnes):qk]&quot;' value='Military - Shipping (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;' value='Motorcycles &amp; mopeds (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Other (Thousand tonnes):qk]&quot;' value='Other (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Rail (Thousand tonnes):qk]&quot;' value='Rail (CO)' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Aviation LTO (Thousand tonnes):qk]&quot;' value='Aviation LTO' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Buses and coaches (Thousand tonnes):qk]&quot;' value='Buses and coaches' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Cars and taxis (Thousand tonnes):qk]&quot;' value='Cars and taxis' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Domestic shipping (Thousand tonnes):qk]&quot;' value='Domestic shipping' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx HGVs (Thousand tonnes):qk]&quot;' value='HGVs' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx LGVs (vans) (Thousand tonnes):qk]&quot;' value='LGVs' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Military Aircraft (Thousand tonnes):qk]&quot;' value='Military - Aircraft' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Military Shipping (Thousand tonnes):qk]&quot;' value='Military - Shipping' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;' value='Motorcycles &amp; mopeds' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Other (Thousand tonnes):qk]&quot;' value='Other' />
          <alias key='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Rail (Thousand tonnes):qk]&quot;' value='Rail' />
        </aliases>
      </column>
      <column datatype='real' name='[CO Aviation LTO (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Buses and coaches (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Cars and taxis (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Domestic shipping (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO HGVs (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO LGVs (vans) (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Military Aircraft (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Military Shipping (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Motorcycles &amp; mopeds (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Other (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO Rail (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Aviation LTO (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Buses and coaches (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Cars and taxis (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Domestic shipping (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx HGVs (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx LGVs (vans) (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Military Aircraft (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Military Shipping (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Motorcycles &amp; mopeds (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Other (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOx Rail (Thousand tonnes)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Year]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_AECDB691AD684A008C021BF2959DE720]' role='measure' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
      <column-instance column='[CO Aviation LTO (Thousand tonnes)]' derivation='Sum' name='[sum:CO Aviation LTO (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Buses and coaches (Thousand tonnes)]' derivation='Sum' name='[sum:CO Buses and coaches (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Cars and taxis (Thousand tonnes)]' derivation='Sum' name='[sum:CO Cars and taxis (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Domestic shipping (Thousand tonnes)]' derivation='Sum' name='[sum:CO Domestic shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO HGVs (Thousand tonnes)]' derivation='Sum' name='[sum:CO HGVs (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO LGVs (vans) (Thousand tonnes)]' derivation='Sum' name='[sum:CO LGVs (vans) (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Military Aircraft (Thousand tonnes)]' derivation='Sum' name='[sum:CO Military Aircraft (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Military Shipping (Thousand tonnes)]' derivation='Sum' name='[sum:CO Military Shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Motorcycles &amp; mopeds (Thousand tonnes)]' derivation='Sum' name='[sum:CO Motorcycles &amp; mopeds (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Other (Thousand tonnes)]' derivation='Sum' name='[sum:CO Other (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO Rail (Thousand tonnes)]' derivation='Sum' name='[sum:CO Rail (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Aviation LTO (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Aviation LTO (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Buses and coaches (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Buses and coaches (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Cars and taxis (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Cars and taxis (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Domestic shipping (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Domestic shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx HGVs (Thousand tonnes)]' derivation='Sum' name='[sum:NOx HGVs (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx LGVs (vans) (Thousand tonnes)]' derivation='Sum' name='[sum:NOx LGVs (vans) (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Military Aircraft (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Military Aircraft (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Military Shipping (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Military Shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Motorcycles &amp; mopeds (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Motorcycles &amp; mopeds (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Other (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Other (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOx Rail (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Rail (Thousand tonnes):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Aviation LTO (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO HGVs (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Domestic shipping (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Aircraft (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Other (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Cars and taxis (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO LGVs (vans) (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Buses and coaches (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Rail (Thousand tonnes):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Shipping (Thousand tonnes):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Year:nk]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1998&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2018&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1990&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2010&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;1993&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1994&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2014&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2002&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1999&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2019&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1995&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2015&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2008&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1991&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2011&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2006&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1996&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2016&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2003&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2004&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2007&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2009&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2000&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1997&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2017&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1992&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2012&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2005&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2001&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2013&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_AECDB691AD684A008C021BF2959DE720'>
            <properties context=''>
              <relation connection='excel-direct.05ldehe1gfq0qk0zw606e1yjj6n1' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:AA31:no:A1:AA31:0' header='yes' outcome='6'>
                  <column datatype='string' date-parse-format='yyyy' name='Year' ordinal='0' />
                  <column datatype='real' name='CO Cars and taxis (Thousand tonnes)' ordinal='1' />
                  <column datatype='real' name='CO LGVs (vans) (Thousand tonnes)' ordinal='2' />
                  <column datatype='real' name='CO HGVs (Thousand tonnes)' ordinal='3' />
                  <column datatype='real' name='CO Buses and coaches (Thousand tonnes)' ordinal='4' />
                  <column datatype='real' name='CO Motorcycles &amp; mopeds (Thousand tonnes)' ordinal='5' />
                  <column datatype='real' name='CO Rail (Thousand tonnes)' ordinal='6' />
                  <column datatype='real' name='CO Aviation LTO (Thousand tonnes)' ordinal='7' />
                  <column datatype='real' name='CO Domestic shipping (Thousand tonnes)' ordinal='8' />
                  <column datatype='real' name='CO Other (Thousand tonnes)' ordinal='9' />
                  <column datatype='real' name='CO Military Aircraft (Thousand tonnes)' ordinal='10' />
                  <column datatype='real' name='CO Military Shipping (Thousand tonnes)' ordinal='11' />
                  <column datatype='real' name='CO Transport total (Thousand tonnes)' ordinal='12' />
                  <column datatype='real' name='CO National total reported to the UNECE' ordinal='13' />
                  <column datatype='real' name='NOx Cars and taxis (Thousand tonnes)' ordinal='14' />
                  <column datatype='real' name='NOx LGVs (vans) (Thousand tonnes)' ordinal='15' />
                  <column datatype='real' name='NOx HGVs (Thousand tonnes)' ordinal='16' />
                  <column datatype='real' name='NOx Buses and coaches (Thousand tonnes)' ordinal='17' />
                  <column datatype='real' name='NOx Motorcycles &amp; mopeds (Thousand tonnes)' ordinal='18' />
                  <column datatype='real' name='NOx Rail (Thousand tonnes)' ordinal='19' />
                  <column datatype='real' name='NOx Aviation LTO (Thousand tonnes)' ordinal='20' />
                  <column datatype='real' name='NOx Domestic shipping (Thousand tonnes)' ordinal='21' />
                  <column datatype='real' name='NOx Other (Thousand tonnes)' ordinal='22' />
                  <column datatype='real' name='NOx Military Aircraft (Thousand tonnes)' ordinal='23' />
                  <column datatype='real' name='NOx Military Shipping (Thousand tonnes)' ordinal='24' />
                  <column datatype='real' name='NOx Transport total (Thousand tonnes)' ordinal='25' />
                  <column datatype='real' name='NOx National total reported to the UNECE' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Carbon Monoxide (CO) Transport Emissions in the UK by Transport Mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (envfigurescleaned)' name='federated.07vs13s0k4th221bc7j6n0pp0lc8' />
          </datasources>
          <datasource-dependencies datasource='federated.07vs13s0k4th221bc7j6n0pp0lc8'>
            <column datatype='real' name='[CO Aviation LTO (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Buses and coaches (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Cars and taxis (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Domestic shipping (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO HGVs (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO LGVs (vans) (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Military Aircraft (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Military Shipping (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Motorcycles &amp; mopeds (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Other (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO Rail (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO Aviation LTO (Thousand tonnes)]' derivation='Sum' name='[sum:CO Aviation LTO (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Buses and coaches (Thousand tonnes)]' derivation='Sum' name='[sum:CO Buses and coaches (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Cars and taxis (Thousand tonnes)]' derivation='Sum' name='[sum:CO Cars and taxis (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Domestic shipping (Thousand tonnes)]' derivation='Sum' name='[sum:CO Domestic shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO HGVs (Thousand tonnes)]' derivation='Sum' name='[sum:CO HGVs (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO LGVs (vans) (Thousand tonnes)]' derivation='Sum' name='[sum:CO LGVs (vans) (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Military Aircraft (Thousand tonnes)]' derivation='Sum' name='[sum:CO Military Aircraft (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Military Shipping (Thousand tonnes)]' derivation='Sum' name='[sum:CO Military Shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Motorcycles &amp; mopeds (Thousand tonnes)]' derivation='Sum' name='[sum:CO Motorcycles &amp; mopeds (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Other (Thousand tonnes)]' derivation='Sum' name='[sum:CO Other (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO Rail (Thousand tonnes)]' derivation='Sum' name='[sum:CO Rail (Thousand tonnes):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Aviation LTO (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Buses and coaches (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Cars and taxis (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Domestic shipping (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO HGVs (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO LGVs (vans) (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Aircraft (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Shipping (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Other (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Rail (Thousand tonnes):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Aviation LTO (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Buses and coaches (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Cars and taxis (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Domestic shipping (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO HGVs (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO LGVs (vans) (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Aircraft (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Military Shipping (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Other (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:CO Rail (Thousand tonnes):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]'>
            <groupfilter function='member' level='[none:Year:nk]' member='&quot;2019&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]</column>
            <column>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]' scope='rows' value='Emissions (thousand tonnes)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]' value='9' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]' value='Year' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='left' />
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#86bcb6' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]</rows>
        <cols>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8CC64C4D-32F9-459F-B13A-B383DB9A9BC6}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Nitrogen Oxides (NO</run>
            <run fontcolor='#000000' fontname='arial,sans-serif' fontsize='11'>ₓ</run>
            <run fontcolor='#000000'>) Transport Emissions in the UK by Transport Mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (envfigurescleaned)' name='federated.07vs13s0k4th221bc7j6n0pp0lc8' />
          </datasources>
          <datasource-dependencies datasource='federated.07vs13s0k4th221bc7j6n0pp0lc8'>
            <column datatype='real' name='[NOx Aviation LTO (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Buses and coaches (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Cars and taxis (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Domestic shipping (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx HGVs (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx LGVs (vans) (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Military Aircraft (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Military Shipping (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Motorcycles &amp; mopeds (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Other (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOx Rail (Thousand tonnes)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[NOx Aviation LTO (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Aviation LTO (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Buses and coaches (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Buses and coaches (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Cars and taxis (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Cars and taxis (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Domestic shipping (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Domestic shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx HGVs (Thousand tonnes)]' derivation='Sum' name='[sum:NOx HGVs (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx LGVs (vans) (Thousand tonnes)]' derivation='Sum' name='[sum:NOx LGVs (vans) (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Military Aircraft (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Military Aircraft (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Military Shipping (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Military Shipping (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Motorcycles &amp; mopeds (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Motorcycles &amp; mopeds (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Other (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Other (Thousand tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOx Rail (Thousand tonnes)]' derivation='Sum' name='[sum:NOx Rail (Thousand tonnes):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Aviation LTO (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Buses and coaches (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Cars and taxis (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Domestic shipping (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx HGVs (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx LGVs (vans) (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Military Aircraft (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Military Shipping (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Other (Thousand tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Rail (Thousand tonnes):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Aviation LTO (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Buses and coaches (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Cars and taxis (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Domestic shipping (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx HGVs (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx LGVs (vans) (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Military Aircraft (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Military Shipping (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Motorcycles &amp; mopeds (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Other (Thousand tonnes):qk]&quot;</bucket>
              <bucket>&quot;[federated.07vs13s0k4th221bc7j6n0pp0lc8].[sum:NOx Rail (Thousand tonnes):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]'>
            <groupfilter function='member' level='[none:Year:nk]' member='&quot;1990&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]</column>
            <column>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]' scope='rows' value='Emissions (thousand tonnes)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[Multiple Values]</rows>
        <cols>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9E702939-D530-446F-8AE1-8DC74507FF87}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card mode='slider' param='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E678372-46FE-4F00-92D9-70CE026A444E}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card mode='slider' param='[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[:Measure Names]</field>
            <field>[federated.07vs13s0k4th221bc7j6n0pp0lc8].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C39F29B-CBA7-40BD-80A9-F90F1423D82B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      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
      mo4yT7zoaH0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
